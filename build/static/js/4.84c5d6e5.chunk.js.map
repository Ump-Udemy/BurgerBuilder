{"version":3,"sources":["containers/Auth/Auth.module.css","containers/Auth/Auth.js","components/UI/Input/Input.js","components/UI/Input/Input.module.css"],"names":["module","exports","Auth","state","controls","email","elementType","elementConfig","type","placeholder","value","validation","required","isEmail","valid","touched","password","minLength","isSignup","inputChangedHandler","event","controlName","updatedControls","updateObject","target","checkValidity","setState","switchAuthModeHandler","prevState","submitHandler","preventDefault","props","onAuth","this","building","authRedirectPath","onSetAuthRedirectPath","formElementsArray","key","push","id","config","form","map","formElement","invalid","shouldValidate","changed","loading","errorMessage","error","message","authRedirect","isAuthenticated","to","className","classes","onSubmit","btnType","clicked","Component","connect","auth","token","burgerBuilder","dispatch","actions","input","inputElement","inputClasses","InputElement","validationError","ValidationError","Invalid","join","onChange","options","option","displayValue","Input","Lable","label"],"mappings":"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","file":"static/js/4.84c5d6e5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__1Zul_\",\"Input\":\"Auth_Input__2LQ-q\"};","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\n\nimport classes from \"./Auth.module.css\";\n\nimport Input from \"../../components/UI/Input/Input\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport Button from \"../../components/UI/Button/Button\";\nimport * as actions from \"../../store/actions/index\";\nimport { updateObject, checkValidity } from \"../../shared/utillity\";\n\nclass Auth extends Component {\n\tstate = {\n\t\tcontrols: {\n\t\t\temail: {\n\t\t\t\telementType: \"input\",\n\t\t\t\telementConfig: {\n\t\t\t\t\ttype: \"email\",\n\t\t\t\t\tplaceholder: \"Mail Address\",\n\t\t\t\t},\n\t\t\t\tvalue: \"\",\n\t\t\t\tvalidation: {\n\t\t\t\t\trequired: true,\n\t\t\t\t\tisEmail: true,\n\t\t\t\t},\n\t\t\t\tvalid: false,\n\t\t\t\ttouched: false,\n\t\t\t},\n\t\t\tpassword: {\n\t\t\t\telementType: \"input\",\n\t\t\t\telementConfig: {\n\t\t\t\t\ttype: \"password\",\n\t\t\t\t\tplaceholder: \"Password\",\n\t\t\t\t},\n\t\t\t\tvalue: \"\",\n\t\t\t\tvalidation: {\n\t\t\t\t\trequired: true,\n\t\t\t\t\tminLength: 6,\n\t\t\t\t},\n\t\t\t\tvalid: false,\n\t\t\t\ttouched: false,\n\t\t\t},\n\t\t},\n\t\tisSignup: true,\n\t};\n\n\tcomponentDidMount() {\n\t\tif (!this.props.building && this.props.authRedirectPath !== \"/\") {\n\t\t\tthis.props.onSetAuthRedirectPath();\n\t\t}\n\t}\n\n\tinputChangedHandler = (event, controlName) => {\n\t\tconst updatedControls = updateObject(this.state.controls, {\n\t\t\t[controlName]: updateObject(this.state.controls[controlName], {\n\t\t\t\tvalue: event.target.value,\n\t\t\t\tvalid: checkValidity(\n\t\t\t\t\tevent.target.value,\n\t\t\t\t\tthis.state.controls[controlName].validation\n\t\t\t\t),\n\t\t\t\ttouched: true,\n\t\t\t}),\n\t\t});\n\t\tthis.setState({ controls: updatedControls });\n\t};\n\n\tswitchAuthModeHandler = () => {\n\t\tthis.setState((prevState) => {\n\t\t\treturn { isSignup: !prevState.isSignup };\n\t\t});\n\t};\n\n\tsubmitHandler = (event) => {\n\t\tevent.preventDefault();\n\t\tthis.props.onAuth(\n\t\t\tthis.state.controls.email.value,\n\t\t\tthis.state.controls.password.value,\n\t\t\tthis.state.isSignup\n\t\t);\n\t};\n\n\trender() {\n\t\tconst formElementsArray = [];\n\t\tfor (let key in this.state.controls) {\n\t\t\tformElementsArray.push({\n\t\t\t\tid: key,\n\t\t\t\tconfig: this.state.controls[key],\n\t\t\t});\n\t\t}\n\t\tlet form = formElementsArray.map((formElement) => (\n\t\t\t<Input\n\t\t\t\tkey={formElement.id}\n\t\t\t\telementType={formElement.config.elementType}\n\t\t\t\telementConfig={formElement.config.elementConfig}\n\t\t\t\tvalue={formElement.config.value}\n\t\t\t\tinvalid={!formElement.config.valid}\n\t\t\t\tshouldValidate={formElement.config.validation}\n\t\t\t\ttouched={formElement.config.touched}\n\t\t\t\tchanged={(event) => this.inputChangedHandler(event, formElement.id)}\n\t\t\t/>\n\t\t));\n\t\tif (this.props.loading) {\n\t\t\tform = <Spinner />;\n\t\t}\n\n\t\tlet errorMessage = null;\n\t\tif (this.props.error) {\n\t\t\terrorMessage = <p>{this.props.error.message}</p>;\n\t\t}\n\t\tlet authRedirect = null;\n\t\tif (this.props.isAuthenticated) {\n\t\t\tauthRedirect = <Redirect to={this.props.authRedirectPath} />;\n\t\t}\n\t\treturn (\n\t\t\t<div className={classes.Auth}>\n\t\t\t\t{authRedirect}\n\t\t\t\t{errorMessage}\n\t\t\t\t<form onSubmit={this.submitHandler}>\n\t\t\t\t\t{form}\n\t\t\t\t\t<Button btnType='Success'>SUBMIT</Button>\n\t\t\t\t</form>\n\t\t\t\t<Button clicked={this.switchAuthModeHandler} btnType='Danger'>\n\t\t\t\t\tSWITCH TO {this.state.isSignup ? \"SIGNIN\" : \"SIGNUP\"}\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tloading: state.auth.loading,\n\t\terror: state.auth.error,\n\t\tisAuthenticated: state.auth.token !== null,\n\t\tbuilding: state.burgerBuilder.building,\n\t\tauthRedirectPath: state.auth.authRedirectPath,\n\t};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tonAuth: (email, password, isSignup) =>\n\t\t\tdispatch(actions.auth(email, password, isSignup)),\n\t\tonSetAuthRedirectPath: () => dispatch(actions.setAuthRediectPath(\"/\")),\n\t};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);\n","import React from \"react\";\n\nimport classes from \"./Input.module.css\";\n\nconst input = (props) => {\n\tlet inputElement = null;\n\tconst inputClasses = [classes.InputElement];\n\tlet validationError = null;\n\tif (props.invalid && props.touched) {\n\t\tvalidationError = (\n\t\t\t<p className={classes.ValidationError}>Please enter a valid value!</p>\n\t\t);\n\t}\n\tif (props.invalid && props.shouldValidate && props.touched) {\n\t\tinputClasses.push(classes.Invalid);\n\t}\n\n\tswitch (props.elementType) {\n\t\tcase \"input\":\n\t\t\tinputElement = (\n\t\t\t\t<input\n\t\t\t\t\tclassName={inputClasses.join(\" \")}\n\t\t\t\t\t{...props.elementConfig}\n\t\t\t\t\tvalue={props.value}\n\t\t\t\t\tonChange={props.changed}\n\t\t\t\t/>\n\t\t\t);\n\t\t\tbreak;\n\t\tcase \"textarea\":\n\t\t\tinputElement = (\n\t\t\t\t<textarea\n\t\t\t\t\tclassName={inputClasses.join(\" \")}\n\t\t\t\t\t{...props.elementConfig}\n\t\t\t\t\tvalue={props.value}\n\t\t\t\t\tonChange={props.changed}\n\t\t\t\t/>\n\t\t\t);\n\t\t\tbreak;\n\t\tcase \"select\":\n\t\t\tinputElement = (\n\t\t\t\t<select\n\t\t\t\t\tclassName={inputClasses.join(\" \")}\n\t\t\t\t\tvalue={props.value}\n\t\t\t\t\tonChange={props.changed}\n\t\t\t\t>\n\t\t\t\t\t{props.elementConfig.options.map((option) => (\n\t\t\t\t\t\t<option key={option.value} value={option.value}>\n\t\t\t\t\t\t\t{option.displayValue}\n\t\t\t\t\t\t</option>\n\t\t\t\t\t))}\n\t\t\t\t</select>\n\t\t\t);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tinputElement = (\n\t\t\t\t<input\n\t\t\t\t\tclassName={inputClasses.join(\" \")}\n\t\t\t\t\t{...props.elementConfig}\n\t\t\t\t\tvalue={props.value}\n\t\t\t\t\tonChange={props.changed}\n\t\t\t\t/>\n\t\t\t);\n\t}\n\treturn (\n\t\t<div className={classes.Input}>\n\t\t\t<label className={classes.Lable}>{props.label}</label>\n\t\t\t{inputElement}\n\t\t\t{validationError}\n\t\t</div>\n\t);\n};\n\nexport default input;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3r5Ke\",\"Label\":\"Input_Label__1qyHr\",\"InputElement\":\"Input_InputElement__2m88K\",\"Invalid\":\"Input_Invalid__16Mis\",\"ValidationError\":\"Input_ValidationError__qMR97\"};"],"sourceRoot":""}