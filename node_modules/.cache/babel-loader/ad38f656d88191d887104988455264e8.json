{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ump/Desktop/Udemy/React The Complete Guide(incl Hooks,React Rounter,Redux)/burgerbuilder/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Aux from \"../../hoc/Aux/Aux\";\nimport Burger from \"../../components/Burger/Burger\";\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\nimport axios from \"../../axios-orders\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\nimport * as actionTypes from \"../../store/action\";\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      purchasable: false,\n      purchasing: false,\n      loading: false,\n      error: false\n    };\n\n    this.componentDidMount = () => {\n      console.log(this.props); // axios\n      // \t.get(\"/ingredients.json\")\n      // \t.then((response) => {\n      // \t\tthis.setState({ ingredients: response.data });\n      // \t\t//this.updatePurchaseState();\n      // \t})\n      // \t.catch((error) => {\n      // \t\tthis.setState({ error: true });\n      // \t});\n      // this.updatePurchaseState();\n    };\n\n    this.purchaseHandler = () => {\n      this.setState({\n        purchasing: true\n      });\n    };\n\n    this.purchaseCancelHandler = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    this.purchaseContinueHandler = () => {\n      //alert(\"You continue!\");\n      const queryParams = [];\n\n      for (let i in this.props.ingredients) {\n        queryParams.push(encodeURIComponent(i) + \"=\" + encodeURIComponent(this.props.ingredients[i]));\n      }\n\n      queryParams.push(\"price=\" + this.props.totalPrice);\n      const queryString = queryParams.join(\"&\");\n      this.props.history.push({\n        pathname: \"/checkout\",\n        search: \"?\" + queryString\n      });\n    };\n  }\n\n  updatePurchaseState(ingredients) {\n    const sum = Object.keys(ingredients).map(igKey => {\n      return ingredients[igKey];\n    }).reduce((sum, el) => {\n      return sum + el;\n    }, 0); //console.log(sum);\n\n    this.setState({\n      purchasable: sum > 0\n    });\n  }\n\n  render() {\n    const disabledInfo = { ...this.props.ingredients\n    };\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    } // {salad: true, meat: false, ...}\n\n\n    let orderSummary = null;\n\n    if (this.state.loading) {\n      orderSummary = /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 19\n      }, this);\n    }\n\n    let burger = this.state.error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Ingredients can't be loaded\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 4\n    }, this) : /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 4\n    }, this);\n\n    if (this.props.ingredients) {\n      burger = /*#__PURE__*/_jsxDEV(Aux, {\n        children: [/*#__PURE__*/_jsxDEV(Burger, {\n          ingredients: this.props.ingredients\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(BuildControls, {\n          ingredientAdded: this.props.onIngredientAdded,\n          ingredientRemoved: this.props.onIngredientRemoved,\n          disabled: disabledInfo,\n          purchasable: this.state.purchasable,\n          ordered: this.purchaseHandler,\n          price: this.props.totalPrice\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 5\n      }, this);\n      orderSummary = /*#__PURE__*/_jsxDEV(OrderSummary, {\n        ingredients: this.props.ingredients,\n        price: this.props.totalPrice,\n        purchaseCancelled: this.purchaseCancelHandler,\n        purchaseContinued: this.purchaseContinueHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 5\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Aux, {\n      children: [/*#__PURE__*/_jsxDEV(Modal, {\n        show: this.state.purchasing,\n        modalClosed: this.purchaseCancelHandler,\n        children: orderSummary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 5\n      }, this), burger]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    ingredients: state.ingredients,\n    totalPrice: state.totalPrice\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onIngredientAdded: ingName => dispatch({\n      type: actionTypes.ADD_INGREDIENT,\n      ingredientName: ingName\n    }),\n    onIngredientRemoved: ingName => dispatch({\n      type: actionTypes.REMOVE_INGREDIENT,\n      ingredientName: ingName\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","map":{"version":3,"sources":["/Users/ump/Desktop/Udemy/React The Complete Guide(incl Hooks,React Rounter,Redux)/burgerbuilder/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","connect","Aux","Burger","BuildControls","Modal","OrderSummary","axios","Spinner","withErrorHandler","actionTypes","BurgerBuilder","state","purchasable","purchasing","loading","error","componentDidMount","console","log","props","purchaseHandler","setState","purchaseCancelHandler","purchaseContinueHandler","queryParams","i","ingredients","push","encodeURIComponent","totalPrice","queryString","join","history","pathname","search","updatePurchaseState","sum","Object","keys","map","igKey","reduce","el","render","disabledInfo","key","orderSummary","burger","onIngredientAdded","onIngredientRemoved","mapStateToProps","mapDispatchToProps","dispatch","ingName","type","ADD_INGREDIENT","ingredientName","REMOVE_INGREDIENT"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Aux from \"../../hoc/Aux/Aux\";\nimport Burger from \"../../components/Burger/Burger\";\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\nimport axios from \"../../axios-orders\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\nimport * as actionTypes from \"../../store/action\";\n\nclass BurgerBuilder extends Component {\n\t// constructor(props) {\n\t//     super(props);\n\t//     this.state = {...}\n\t// }\n\tstate = {\n\t\tpurchasable: false,\n\t\tpurchasing: false,\n\t\tloading: false,\n\t\terror: false,\n\t};\n\n\tcomponentDidMount = () => {\n\t\tconsole.log(this.props);\n\t\t// axios\n\t\t// \t.get(\"/ingredients.json\")\n\t\t// \t.then((response) => {\n\t\t// \t\tthis.setState({ ingredients: response.data });\n\t\t// \t\t//this.updatePurchaseState();\n\t\t// \t})\n\t\t// \t.catch((error) => {\n\t\t// \t\tthis.setState({ error: true });\n\t\t// \t});\n\t\t// this.updatePurchaseState();\n\t};\n\n\tupdatePurchaseState(ingredients) {\n\t\tconst sum = Object.keys(ingredients)\n\t\t\t.map((igKey) => {\n\t\t\t\treturn ingredients[igKey];\n\t\t\t})\n\t\t\t.reduce((sum, el) => {\n\t\t\t\treturn sum + el;\n\t\t\t}, 0);\n\t\t//console.log(sum);\n\t\tthis.setState({ purchasable: sum > 0 });\n\t}\n\n\tpurchaseHandler = () => {\n\t\tthis.setState({ purchasing: true });\n\t};\n\n\tpurchaseCancelHandler = () => {\n\t\tthis.setState({ purchasing: false });\n\t};\n\n\tpurchaseContinueHandler = () => {\n\t\t//alert(\"You continue!\");\n\t\tconst queryParams = [];\n\t\tfor (let i in this.props.ingredients) {\n\t\t\tqueryParams.push(\n\t\t\t\tencodeURIComponent(i) +\n\t\t\t\t\t\"=\" +\n\t\t\t\t\tencodeURIComponent(this.props.ingredients[i])\n\t\t\t);\n\t\t}\n\t\tqueryParams.push(\"price=\" + this.props.totalPrice);\n\t\tconst queryString = queryParams.join(\"&\");\n\t\tthis.props.history.push({\n\t\t\tpathname: \"/checkout\",\n\t\t\tsearch: \"?\" + queryString,\n\t\t});\n\t};\n\n\trender() {\n\t\tconst disabledInfo = {\n\t\t\t...this.props.ingredients,\n\t\t};\n\t\tfor (let key in disabledInfo) {\n\t\t\tdisabledInfo[key] = disabledInfo[key] <= 0;\n\t\t}\n\t\t// {salad: true, meat: false, ...}\n\t\tlet orderSummary = null;\n\n\t\tif (this.state.loading) {\n\t\t\torderSummary = <Spinner />;\n\t\t}\n\t\tlet burger = this.state.error ? (\n\t\t\t<p>Ingredients can't be loaded</p>\n\t\t) : (\n\t\t\t<Spinner />\n\t\t);\n\t\tif (this.props.ingredients) {\n\t\t\tburger = (\n\t\t\t\t<Aux>\n\t\t\t\t\t<Burger ingredients={this.props.ingredients} />\n\t\t\t\t\t<BuildControls\n\t\t\t\t\t\tingredientAdded={this.props.onIngredientAdded}\n\t\t\t\t\t\tingredientRemoved={this.props.onIngredientRemoved}\n\t\t\t\t\t\tdisabled={disabledInfo}\n\t\t\t\t\t\tpurchasable={this.state.purchasable}\n\t\t\t\t\t\tordered={this.purchaseHandler}\n\t\t\t\t\t\tprice={this.props.totalPrice}\n\t\t\t\t\t/>\n\t\t\t\t</Aux>\n\t\t\t);\n\t\t\torderSummary = (\n\t\t\t\t<OrderSummary\n\t\t\t\t\tingredients={this.props.ingredients}\n\t\t\t\t\tprice={this.props.totalPrice}\n\t\t\t\t\tpurchaseCancelled={this.purchaseCancelHandler}\n\t\t\t\t\tpurchaseContinued={this.purchaseContinueHandler}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\n\t\treturn (\n\t\t\t<Aux>\n\t\t\t\t<Modal\n\t\t\t\t\tshow={this.state.purchasing}\n\t\t\t\t\tmodalClosed={this.purchaseCancelHandler}\n\t\t\t\t>\n\t\t\t\t\t{orderSummary}\n\t\t\t\t</Modal>\n\t\t\t\t{burger}\n\t\t\t</Aux>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tingredients: state.ingredients,\n\t\ttotalPrice: state.totalPrice,\n\t};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tonIngredientAdded: (ingName) =>\n\t\t\tdispatch({ type: actionTypes.ADD_INGREDIENT, ingredientName: ingName }),\n\t\tonIngredientRemoved: (ingName) =>\n\t\t\tdispatch({\n\t\t\t\ttype: actionTypes.REMOVE_INGREDIENT,\n\t\t\t\tingredientName: ingName,\n\t\t\t}),\n\t};\n};\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(withErrorHandler(BurgerBuilder, axios));\n"]},"metadata":{},"sourceType":"module"}