{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ump/Desktop/Udemy/React The Complete Guide(incl Hooks,React Rounter,Redux)/burgerbuilder/src/containers/Orders/Orders.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Order from \"../../components/Order/Order\";\nimport axios from \"../../axios-orders\";\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\nimport * as actions from \"../../store/actions/index\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\n\nclass Orders extends Component {\n  componentDidMount() {\n    this.props.fetchOrders();\n  }\n\n  render() {\n    let orders = /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 16\n    }, this);\n\n    if (!this.props.loading) {\n      orders = this.props.orders.map(order => /*#__PURE__*/_jsxDEV(Order, {\n        ingredients: order.ingredients,\n        price: order.price\n      }, order.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 5\n      }, this));\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: orders\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    orders: state.order.orders,\n    loading: state.order.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onFetchOrders: () => dispatch(actions.fetchOrders())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));","map":{"version":3,"sources":["/Users/ump/Desktop/Udemy/React The Complete Guide(incl Hooks,React Rounter,Redux)/burgerbuilder/src/containers/Orders/Orders.js"],"names":["React","Component","connect","Order","axios","withErrorHandler","actions","Spinner","Orders","componentDidMount","props","fetchOrders","render","orders","loading","map","order","ingredients","price","id","mapStateToProps","state","mapDispatchToProps","dispatch","onFetchOrders"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,gBAAP,MAA6B,6CAA7B;AACA,OAAO,KAAKC,OAAZ,MAAyB,2BAAzB;AACA,OAAOC,OAAP,MAAoB,qCAApB;;AAEA,MAAMC,MAAN,SAAqBP,SAArB,CAA+B;AAC9BQ,EAAAA,iBAAiB,GAAG;AACnB,SAAKC,KAAL,CAAWC,WAAX;AACA;;AACDC,EAAAA,MAAM,GAAG;AACR,QAAIC,MAAM,gBAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAb;;AACA,QAAI,CAAC,KAAKH,KAAL,CAAWI,OAAhB,EAAyB;AACxBD,MAAAA,MAAM,GAAG,KAAKH,KAAL,CAAWG,MAAX,CAAkBE,GAAlB,CAAuBC,KAAD,iBAC9B,QAAC,KAAD;AAEC,QAAA,WAAW,EAAEA,KAAK,CAACC,WAFpB;AAGC,QAAA,KAAK,EAAED,KAAK,CAACE;AAHd,SACMF,KAAK,CAACG,EADZ;AAAA;AAAA;AAAA;AAAA,cADQ,CAAT;AAOA;;AACD,wBAAO;AAAA,gBAAMN;AAAN;AAAA;AAAA;AAAA;AAAA,YAAP;AACA;;AAhB6B;;AAmB/B,MAAMO,eAAe,GAAIC,KAAD,IAAW;AAClC,SAAO;AACNR,IAAAA,MAAM,EAAEQ,KAAK,CAACL,KAAN,CAAYH,MADd;AAENC,IAAAA,OAAO,EAAEO,KAAK,CAACL,KAAN,CAAYF;AAFf,GAAP;AAIA,CALD;;AAOA,MAAMQ,kBAAkB,GAAIC,QAAD,IAAc;AACxC,SAAO;AACNC,IAAAA,aAAa,EAAE,MAAMD,QAAQ,CAACjB,OAAO,CAACK,WAAR,EAAD;AADvB,GAAP;AAGA,CAJD;;AAMA,eAAeT,OAAO,CACrBkB,eADqB,EAErBE,kBAFqB,CAAP,CAGbjB,gBAAgB,CAACG,MAAD,EAASJ,KAAT,CAHH,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Order from \"../../components/Order/Order\";\nimport axios from \"../../axios-orders\";\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\nimport * as actions from \"../../store/actions/index\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\n\nclass Orders extends Component {\n\tcomponentDidMount() {\n\t\tthis.props.fetchOrders();\n\t}\n\trender() {\n\t\tlet orders = <Spinner />;\n\t\tif (!this.props.loading) {\n\t\t\torders = this.props.orders.map((order) => (\n\t\t\t\t<Order\n\t\t\t\t\tkey={order.id}\n\t\t\t\t\tingredients={order.ingredients}\n\t\t\t\t\tprice={order.price}\n\t\t\t\t/>\n\t\t\t));\n\t\t}\n\t\treturn <div>{orders}</div>;\n\t}\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\torders: state.order.orders,\n\t\tloading: state.order.loading,\n\t};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tonFetchOrders: () => dispatch(actions.fetchOrders()),\n\t};\n};\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(withErrorHandler(Orders, axios));\n"]},"metadata":{},"sourceType":"module"}