{"ast":null,"code":"import axios from \"axios\";\nimport * as actionTypes from \"./actionTypes\";\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport const authSuccess = (token, userId) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    idToken: token,\n    userId: userId\n  };\n};\nexport const authFailed = error => {\n  return {\n    type: actionTypes.AUTH_FAILED,\n    error: error\n  };\n};\nexport const logout = () => {\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"expirationDate\");\n  localStorage.removeItem(\"userId\");\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\nexport const checkAuthTimeout = expirationTime => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, expirationTime * 1000);\n  };\n};\nexport const auth = (email, password, isSignup) => {\n  return dispatch => {\n    dispatch(authStart());\n    const authData = {\n      email: email,\n      password: password,\n      returnSecureToken: true\n    };\n    let url = \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyC7Z7IBWL-_SLT1bjJ3w9GY5XAC7-1ogb8\";\n\n    if (!isSignup) {\n      url = \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyC7Z7IBWL-_SLT1bjJ3w9GY5XAC7-1ogb8\";\n    }\n\n    axios.post(url, authData).then(response => {\n      console.log(response);\n      const expirationDate = new Date(new Date().getTime + response.data.expiresIn * 1000);\n      localStorage.setItem(\"token\", response.data.idToken);\n      localStorage.setItem(\"expirationDate\", expirationDate);\n      localStorage.setItem(\"userId\", response.data.localId);\n      dispatch(authSuccess(response.data.idToken, response.data.localId));\n      dispatch(checkAuthTimeout(response.data.expiresIn));\n    }).catch(error => {\n      dispatch(authFailed(error.response.data.error));\n    });\n  };\n};\nexport const setAuthRediectPath = path => {\n  return {\n    type: actionTypes.SET_AUTH_REDIRECT_PATH,\n    path: path\n  };\n};\nexport const authCheckState = () => {\n  return dispatch => {\n    const token = localStorage.getItem(\"token\");\n\n    if (!token) {\n      dispatch(logout());\n    } else {\n      const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\n\n      if (expirationDate <= new Date()) {\n        dispatch(logout());\n      } else {\n        const userId = localStorage.getItem(\"userId\");\n        dispatch(authSuccess(token, userId));\n        dispatch(checkAuthTimeout(expirationDate.getTime() - new Date().getTime()));\n      }\n    }\n  };\n};","map":{"version":3,"sources":["/Users/ump/Desktop/Udemy/React The Complete Guide(incl Hooks,React Rounter,Redux)/burgerbuilder/src/store/actions/auth.js"],"names":["axios","actionTypes","authStart","type","AUTH_START","authSuccess","token","userId","AUTH_SUCCESS","idToken","authFailed","error","AUTH_FAILED","logout","localStorage","removeItem","AUTH_LOGOUT","checkAuthTimeout","expirationTime","dispatch","setTimeout","auth","email","password","isSignup","authData","returnSecureToken","url","post","then","response","console","log","expirationDate","Date","getTime","data","expiresIn","setItem","localId","catch","setAuthRediectPath","path","SET_AUTH_REDIRECT_PATH","authCheckState","getItem"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\nimport * as actionTypes from \"./actionTypes\";\n\nexport const authStart = () => {\n\treturn {\n\t\ttype: actionTypes.AUTH_START,\n\t};\n};\n\nexport const authSuccess = (token, userId) => {\n\treturn {\n\t\ttype: actionTypes.AUTH_SUCCESS,\n\t\tidToken: token,\n\t\tuserId: userId,\n\t};\n};\n\nexport const authFailed = (error) => {\n\treturn {\n\t\ttype: actionTypes.AUTH_FAILED,\n\t\terror: error,\n\t};\n};\n\nexport const logout = () => {\n\tlocalStorage.removeItem(\"token\");\n\tlocalStorage.removeItem(\"expirationDate\");\n\tlocalStorage.removeItem(\"userId\");\n\treturn {\n\t\ttype: actionTypes.AUTH_LOGOUT,\n\t};\n};\n\nexport const checkAuthTimeout = (expirationTime) => {\n\treturn (dispatch) => {\n\t\tsetTimeout(() => {\n\t\t\tdispatch(logout());\n\t\t}, expirationTime * 1000);\n\t};\n};\n\nexport const auth = (email, password, isSignup) => {\n\treturn (dispatch) => {\n\t\tdispatch(authStart());\n\t\tconst authData = {\n\t\t\temail: email,\n\t\t\tpassword: password,\n\t\t\treturnSecureToken: true,\n\t\t};\n\t\tlet url =\n\t\t\t\"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyC7Z7IBWL-_SLT1bjJ3w9GY5XAC7-1ogb8\";\n\t\tif (!isSignup) {\n\t\t\turl =\n\t\t\t\t\"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyC7Z7IBWL-_SLT1bjJ3w9GY5XAC7-1ogb8\";\n\t\t}\n\t\taxios\n\t\t\t.post(url, authData)\n\t\t\t.then((response) => {\n\t\t\t\tconsole.log(response);\n\t\t\t\tconst expirationDate = new Date(\n\t\t\t\t\tnew Date().getTime + response.data.expiresIn * 1000\n\t\t\t\t);\n\t\t\t\tlocalStorage.setItem(\"token\", response.data.idToken);\n\t\t\t\tlocalStorage.setItem(\"expirationDate\", expirationDate);\n\t\t\t\tlocalStorage.setItem(\"userId\", response.data.localId);\n\t\t\t\tdispatch(authSuccess(response.data.idToken, response.data.localId));\n\t\t\t\tdispatch(checkAuthTimeout(response.data.expiresIn));\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tdispatch(authFailed(error.response.data.error));\n\t\t\t});\n\t};\n};\n\nexport const setAuthRediectPath = (path) => {\n\treturn {\n\t\ttype: actionTypes.SET_AUTH_REDIRECT_PATH,\n\t\tpath: path,\n\t};\n};\n\nexport const authCheckState = () => {\n\treturn (dispatch) => {\n\t\tconst token = localStorage.getItem(\"token\");\n\t\tif (!token) {\n\t\t\tdispatch(logout());\n\t\t} else {\n\t\t\tconst expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\n\t\t\tif (expirationDate <= new Date()) {\n\t\t\t\tdispatch(logout());\n\t\t\t} else {\n\t\t\t\tconst userId = localStorage.getItem(\"userId\");\n\t\t\t\tdispatch(authSuccess(token, userId));\n\t\t\t\tdispatch(\n\t\t\t\t\tcheckAuthTimeout(expirationDate.getTime() - new Date().getTime())\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}