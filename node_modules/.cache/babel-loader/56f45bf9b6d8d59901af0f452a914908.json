{"ast":null,"code":"import * as actionTypes from \"./actionTypes\";\nimport axios from \"../../axios-orders\";\nexport const purchaseBurgerSuccecc = (id, orderData) => {\n  return {\n    type: actionTypes.PURCHASE_BURGER_SUCCESS,\n    orderId: id,\n    orderData: orderData\n  };\n};\nexport const purchaseBurgerFailed = error => {\n  return {\n    type: actionTypes.PURCHASE_BURGER_FAILED,\n    error: error\n  };\n};\nexport const purchaseBurgerStart = () => {\n  return {\n    type: actionTypes.PURCHASE_BURGER_START\n  };\n};\nexport const purchaseBurger = orderData => {\n  return dispatch => {\n    dispatch(purchaseBurgerStart());\n    axios.post(\"/orders.json\", orderData).then(response => {\n      dispatch(purchaseBurgerSuccecc(response.data.name, orderData));\n    }).catch(error => {\n      dispatch(purchaseBurgerFailed(error));\n    });\n  };\n};\nexport const purchaseInit = () => {\n  return {\n    type: actionTypes.PURCHASE_INIT\n  };\n};\nexport const fetchOrdersSuccess = orders => {\n  return {\n    type: actionTypes.FETCH_ORDERS_SUCCESS,\n    orders: orders\n  };\n};\nexport const fetchOrderFailed = error => {\n  return {\n    type: actionTypes.FETCH_ORDERS_FAILED,\n    error: error\n  };\n};\nexport const fetchOrdersStart = () => {\n  return {\n    type: actionTypes.FETCH_ORDERS_START\n  };\n};\nexport const fetchOrders = () => {\n  return dispatch => {\n    axios.get(\"/orders.json\").then(response => {\n      const fecthedOrders = [];\n\n      for (let key in response.data) {\n        fecthedOrders.push({ ...response.data[key],\n          id: key\n        });\n      }\n\n      dispatch(fetchOrdersSuccess(fecthedOrders));\n    }).catch(err => {\n      this.setState({\n        loading: false\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/ump/Desktop/Udemy/React The Complete Guide(incl Hooks,React Rounter,Redux)/burgerbuilder/src/store/actions/order.js"],"names":["actionTypes","axios","purchaseBurgerSuccecc","id","orderData","type","PURCHASE_BURGER_SUCCESS","orderId","purchaseBurgerFailed","error","PURCHASE_BURGER_FAILED","purchaseBurgerStart","PURCHASE_BURGER_START","purchaseBurger","dispatch","post","then","response","data","name","catch","purchaseInit","PURCHASE_INIT","fetchOrdersSuccess","orders","FETCH_ORDERS_SUCCESS","fetchOrderFailed","FETCH_ORDERS_FAILED","fetchOrdersStart","FETCH_ORDERS_START","fetchOrders","get","fecthedOrders","key","push","err","setState","loading"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,OAAO,MAAMC,qBAAqB,GAAG,CAACC,EAAD,EAAKC,SAAL,KAAmB;AACvD,SAAO;AACNC,IAAAA,IAAI,EAAEL,WAAW,CAACM,uBADZ;AAENC,IAAAA,OAAO,EAAEJ,EAFH;AAGNC,IAAAA,SAAS,EAAEA;AAHL,GAAP;AAKA,CANM;AAQP,OAAO,MAAMI,oBAAoB,GAAIC,KAAD,IAAW;AAC9C,SAAO;AACNJ,IAAAA,IAAI,EAAEL,WAAW,CAACU,sBADZ;AAEND,IAAAA,KAAK,EAAEA;AAFD,GAAP;AAIA,CALM;AAOP,OAAO,MAAME,mBAAmB,GAAG,MAAM;AACxC,SAAO;AACNN,IAAAA,IAAI,EAAEL,WAAW,CAACY;AADZ,GAAP;AAGA,CAJM;AAMP,OAAO,MAAMC,cAAc,GAAIT,SAAD,IAAe;AAC5C,SAAQU,QAAD,IAAc;AACpBA,IAAAA,QAAQ,CAACH,mBAAmB,EAApB,CAAR;AACAV,IAAAA,KAAK,CACHc,IADF,CACO,cADP,EACuBX,SADvB,EAEEY,IAFF,CAEQC,QAAD,IAAc;AACnBH,MAAAA,QAAQ,CAACZ,qBAAqB,CAACe,QAAQ,CAACC,IAAT,CAAcC,IAAf,EAAqBf,SAArB,CAAtB,CAAR;AACA,KAJF,EAKEgB,KALF,CAKSX,KAAD,IAAW;AACjBK,MAAAA,QAAQ,CAACN,oBAAoB,CAACC,KAAD,CAArB,CAAR;AACA,KAPF;AAQA,GAVD;AAWA,CAZM;AAcP,OAAO,MAAMY,YAAY,GAAG,MAAM;AACjC,SAAO;AACNhB,IAAAA,IAAI,EAAEL,WAAW,CAACsB;AADZ,GAAP;AAGA,CAJM;AAMP,OAAO,MAAMC,kBAAkB,GAAIC,MAAD,IAAY;AAC7C,SAAO;AAAEnB,IAAAA,IAAI,EAAEL,WAAW,CAACyB,oBAApB;AAA0CD,IAAAA,MAAM,EAAEA;AAAlD,GAAP;AACA,CAFM;AAIP,OAAO,MAAME,gBAAgB,GAAIjB,KAAD,IAAW;AAC1C,SAAO;AACNJ,IAAAA,IAAI,EAAEL,WAAW,CAAC2B,mBADZ;AAENlB,IAAAA,KAAK,EAAEA;AAFD,GAAP;AAIA,CALM;AAOP,OAAO,MAAMmB,gBAAgB,GAAG,MAAM;AACrC,SAAO;AACNvB,IAAAA,IAAI,EAAEL,WAAW,CAAC6B;AADZ,GAAP;AAGA,CAJM;AAKP,OAAO,MAAMC,WAAW,GAAG,MAAM;AAChC,SAAQhB,QAAD,IAAc;AACpBb,IAAAA,KAAK,CACH8B,GADF,CACM,cADN,EAEEf,IAFF,CAEQC,QAAD,IAAc;AACnB,YAAMe,aAAa,GAAG,EAAtB;;AACA,WAAK,IAAIC,GAAT,IAAgBhB,QAAQ,CAACC,IAAzB,EAA+B;AAC9Bc,QAAAA,aAAa,CAACE,IAAd,CAAmB,EAAE,GAAGjB,QAAQ,CAACC,IAAT,CAAce,GAAd,CAAL;AAAyB9B,UAAAA,EAAE,EAAE8B;AAA7B,SAAnB;AACA;;AACDnB,MAAAA,QAAQ,CAACS,kBAAkB,CAACS,aAAD,CAAnB,CAAR;AACA,KARF,EASEZ,KATF,CASSe,GAAD,IAAS;AACf,WAAKC,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAd;AACA,KAXF;AAYA,GAbD;AAcA,CAfM","sourcesContent":["import * as actionTypes from \"./actionTypes\";\nimport axios from \"../../axios-orders\";\n\nexport const purchaseBurgerSuccecc = (id, orderData) => {\n\treturn {\n\t\ttype: actionTypes.PURCHASE_BURGER_SUCCESS,\n\t\torderId: id,\n\t\torderData: orderData,\n\t};\n};\n\nexport const purchaseBurgerFailed = (error) => {\n\treturn {\n\t\ttype: actionTypes.PURCHASE_BURGER_FAILED,\n\t\terror: error,\n\t};\n};\n\nexport const purchaseBurgerStart = () => {\n\treturn {\n\t\ttype: actionTypes.PURCHASE_BURGER_START,\n\t};\n};\n\nexport const purchaseBurger = (orderData) => {\n\treturn (dispatch) => {\n\t\tdispatch(purchaseBurgerStart());\n\t\taxios\n\t\t\t.post(\"/orders.json\", orderData)\n\t\t\t.then((response) => {\n\t\t\t\tdispatch(purchaseBurgerSuccecc(response.data.name, orderData));\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tdispatch(purchaseBurgerFailed(error));\n\t\t\t});\n\t};\n};\n\nexport const purchaseInit = () => {\n\treturn {\n\t\ttype: actionTypes.PURCHASE_INIT,\n\t};\n};\n\nexport const fetchOrdersSuccess = (orders) => {\n\treturn { type: actionTypes.FETCH_ORDERS_SUCCESS, orders: orders };\n};\n\nexport const fetchOrderFailed = (error) => {\n\treturn {\n\t\ttype: actionTypes.FETCH_ORDERS_FAILED,\n\t\terror: error,\n\t};\n};\n\nexport const fetchOrdersStart = () => {\n\treturn {\n\t\ttype: actionTypes.FETCH_ORDERS_START,\n\t};\n};\nexport const fetchOrders = () => {\n\treturn (dispatch) => {\n\t\taxios\n\t\t\t.get(\"/orders.json\")\n\t\t\t.then((response) => {\n\t\t\t\tconst fecthedOrders = [];\n\t\t\t\tfor (let key in response.data) {\n\t\t\t\t\tfecthedOrders.push({ ...response.data[key], id: key });\n\t\t\t\t}\n\t\t\t\tdispatch(fetchOrdersSuccess(fecthedOrders));\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tthis.setState({ loading: false });\n\t\t\t});\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}