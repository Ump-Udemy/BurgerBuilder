{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ump/Desktop/Udemy/React The Complete Guide(incl Hooks,React Rounter,Redux)/burgerbuilder/src/containers/Auth/Auth.js\";\nimport React, { Component } from \"react\";\nimport Input from \"../../components/UI/Input/Input\";\nimport Button from \"../../components/UI/Button/Button\";\n\nclass Auth extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      controls: {\n        email: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"email\",\n            placeholder: \"Mail Address\"\n          },\n          value: \"\",\n          validation: {\n            required: true,\n            isEmail: true\n          },\n          valid: false,\n          touched: false\n        },\n        password: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"password\",\n            placeholder: \"Password\"\n          },\n          value: \"\",\n          validation: {\n            required: true,\n            minLength: 6\n          },\n          valid: false,\n          touched: false\n        }\n      }\n    };\n  }\n\n  checkValidaity(value, rules) {\n    let isValid = true;\n\n    if (rules.required) {\n      isValid = value.trim() !== \" \" && isValid;\n    }\n\n    if (rules.minLength) {\n      isValid = value.length >= rules.minLength && isValid;\n    }\n\n    if (rules.maxLength) {\n      isValid = value.length <= rules.maxLength && isValid;\n    }\n\n    return isValid;\n  }\n\n  render() {\n    const formElementsArray = [];\n\n    for (let key in this.state.controls) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.controls[key]\n      });\n    }\n\n    const form = formElementsArray.map(formElement => /*#__PURE__*/_jsxDEV(Input, {\n      elementType: formElement.config.elementType,\n      elementConfig: formElement.config.elementConfig,\n      value: formElement.config.value,\n      invalid: !formElement.config.valid,\n      shouldValidate: formElement.config.validation,\n      touched: formElement.config.touched,\n      changed: event => this.inputChangedHandler(event, formElement.id)\n    }, formElement.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 4\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [form, /*#__PURE__*/_jsxDEV(Button, {\n          btnType: \"Success\",\n          children: \"SUBMIT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default Auth;","map":{"version":3,"sources":["/Users/ump/Desktop/Udemy/React The Complete Guide(incl Hooks,React Rounter,Redux)/burgerbuilder/src/containers/Auth/Auth.js"],"names":["React","Component","Input","Button","Auth","state","controls","email","elementType","elementConfig","type","placeholder","value","validation","required","isEmail","valid","touched","password","minLength","checkValidaity","rules","isValid","trim","length","maxLength","render","formElementsArray","key","push","id","config","form","map","formElement","event","inputChangedHandler"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport Input from \"../../components/UI/Input/Input\";\nimport Button from \"../../components/UI/Button/Button\";\n\nclass Auth extends Component {\n\tstate = {\n\t\tcontrols: {\n\t\t\temail: {\n\t\t\t\telementType: \"input\",\n\t\t\t\telementConfig: {\n\t\t\t\t\ttype: \"email\",\n\t\t\t\t\tplaceholder: \"Mail Address\",\n\t\t\t\t},\n\t\t\t\tvalue: \"\",\n\t\t\t\tvalidation: {\n\t\t\t\t\trequired: true,\n\t\t\t\t\tisEmail: true,\n\t\t\t\t},\n\t\t\t\tvalid: false,\n\t\t\t\ttouched: false,\n\t\t\t},\n\t\t\tpassword: {\n\t\t\t\telementType: \"input\",\n\t\t\t\telementConfig: {\n\t\t\t\t\ttype: \"password\",\n\t\t\t\t\tplaceholder: \"Password\",\n\t\t\t\t},\n\t\t\t\tvalue: \"\",\n\t\t\t\tvalidation: {\n\t\t\t\t\trequired: true,\n\t\t\t\t\tminLength: 6,\n\t\t\t\t},\n\t\t\t\tvalid: false,\n\t\t\t\ttouched: false,\n\t\t\t},\n\t\t},\n\t};\n\n\tcheckValidaity(value, rules) {\n\t\tlet isValid = true;\n\t\tif (rules.required) {\n\t\t\tisValid = value.trim() !== \" \" && isValid;\n\t\t}\n\n\t\tif (rules.minLength) {\n\t\t\tisValid = value.length >= rules.minLength && isValid;\n\t\t}\n\n\t\tif (rules.maxLength) {\n\t\t\tisValid = value.length <= rules.maxLength && isValid;\n\t\t}\n\n\t\treturn isValid;\n\t}\n\n\trender() {\n\t\tconst formElementsArray = [];\n\t\tfor (let key in this.state.controls) {\n\t\t\tformElementsArray.push({\n\t\t\t\tid: key,\n\t\t\t\tconfig: this.state.controls[key],\n\t\t\t});\n\t\t}\n\t\tconst form = formElementsArray.map((formElement) => (\n\t\t\t<Input\n\t\t\t\tkey={formElement.id}\n\t\t\t\telementType={formElement.config.elementType}\n\t\t\t\telementConfig={formElement.config.elementConfig}\n\t\t\t\tvalue={formElement.config.value}\n\t\t\t\tinvalid={!formElement.config.valid}\n\t\t\t\tshouldValidate={formElement.config.validation}\n\t\t\t\ttouched={formElement.config.touched}\n\t\t\t\tchanged={(event) => this.inputChangedHandler(event, formElement.id)}\n\t\t\t/>\n\t\t));\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<form>\n\t\t\t\t\t{form}\n\t\t\t\t\t<Button btnType='Success'>SUBMIT</Button>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Auth;\n"]},"metadata":{},"sourceType":"module"}