{"ast":null,"code":"import*as actionTypes from\"../actions/actionTypes\";import{updateObject}from\"../../shared/utillity\";var initialState={orders:[],loading:false,purchased:false};var purchaseBurgerSuccess=function purchaseBurgerSuccess(state,action){var newOrder=updateObject(action.orderData,{id:action.orderId});return updateObject(state,{loading:false,orders:state.orders.concat(newOrder),purchased:true});};var purchaseBurgerFailed=function purchaseBurgerFailed(state,action){return updateObject(state,{loading:false});};var purchaseBurgerStart=function purchaseBurgerStart(state,action){return updateObject(state,{loading:true});};var purchaseInit=function purchaseInit(state,action){return updateObject(state,{purchased:false});};var fetchOrdersStart=function fetchOrdersStart(state,action){return updateObject(state,{loading:true});};var fetchOrdersSuccess=function fetchOrdersSuccess(state,action){return updateObject(state,{orders:action.orders,loading:false});};var fetchOrdersFailed=function fetchOrdersFailed(state,action){return updateObject(state,{loading:false});};var reducer=function reducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case actionTypes.PURCHASE_BURGER_SUCCESS:return purchaseBurgerSuccess(state,action);case actionTypes.PURCHASE_BURGER_FAILED:return purchaseBurgerFailed(state,action);case actionTypes.PURCHASE_BURGER_START:return purchaseBurgerStart(state,action);case actionTypes.PURCHASE_INIT:return purchaseInit(state,action);case actionTypes.FETCH_ORDERS_START:return fetchOrdersStart(state,action);case actionTypes.FETCH_ORDERS_SUCCESS:return fetchOrdersSuccess(state,action);case actionTypes.FETCH_ORDERS_FAILED:return fetchOrdersFailed(state,action);default:return state;}};export default reducer;","map":{"version":3,"sources":["/Users/ump/Desktop/Udemy/React The Complete Guide(incl Hooks,React Rounter,Redux)/burgerbuilder/src/store/reducers/order.js"],"names":["actionTypes","updateObject","initialState","orders","loading","purchased","purchaseBurgerSuccess","state","action","newOrder","orderData","id","orderId","concat","purchaseBurgerFailed","purchaseBurgerStart","purchaseInit","fetchOrdersStart","fetchOrdersSuccess","fetchOrdersFailed","reducer","type","PURCHASE_BURGER_SUCCESS","PURCHASE_BURGER_FAILED","PURCHASE_BURGER_START","PURCHASE_INIT","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAILED"],"mappings":"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","sourcesContent":["import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../../shared/utillity\";\n\nconst initialState = {\n\torders: [],\n\tloading: false,\n\tpurchased: false,\n};\n\nconst purchaseBurgerSuccess = (state, action) => {\n\tconst newOrder = updateObject(action.orderData, { id: action.orderId });\n\treturn updateObject(state, {\n\t\tloading: false,\n\t\torders: state.orders.concat(newOrder),\n\t\tpurchased: true,\n\t});\n};\nconst purchaseBurgerFailed = (state, action) => {\n\treturn updateObject(state, { loading: false });\n};\nconst purchaseBurgerStart = (state, action) => {\n\treturn updateObject(state, { loading: true });\n};\nconst purchaseInit = (state, action) => {\n\treturn updateObject(state, { purchased: false });\n};\nconst fetchOrdersStart = (state, action) => {\n\treturn updateObject(state, { loading: true });\n};\nconst fetchOrdersSuccess = (state, action) => {\n\treturn updateObject(state, { orders: action.orders, loading: false });\n};\nconst fetchOrdersFailed = (state, action) => {\n\treturn updateObject(state, { loading: false });\n};\n\nconst reducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase actionTypes.PURCHASE_BURGER_SUCCESS:\n\t\t\treturn purchaseBurgerSuccess(state, action);\n\n\t\tcase actionTypes.PURCHASE_BURGER_FAILED:\n\t\t\treturn purchaseBurgerFailed(state, action);\n\n\t\tcase actionTypes.PURCHASE_BURGER_START:\n\t\t\treturn purchaseBurgerStart(state, action);\n\n\t\tcase actionTypes.PURCHASE_INIT:\n\t\t\treturn purchaseInit(state, action);\n\n\t\tcase actionTypes.FETCH_ORDERS_START:\n\t\t\treturn fetchOrdersStart(state, action);\n\n\t\tcase actionTypes.FETCH_ORDERS_SUCCESS:\n\t\t\treturn fetchOrdersSuccess(state, action);\n\n\t\tcase actionTypes.FETCH_ORDERS_FAILED:\n\t\t\treturn fetchOrdersFailed(state, action);\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}