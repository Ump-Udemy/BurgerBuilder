{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ump/Desktop/Udemy/React The Complete Guide(incl Hooks,React Rounter,Redux)/burgerbuilder/src/containers/Checkout/ContactData/ContactData.js\";\nimport React, { Component } from \"react\";\nimport Button from \"../../../components/UI/Button/Button\";\nimport Spinner from \"../../../components/UI/Spinner/Spinner\";\nimport Input from \"../../../components/UI/Input/Input\";\nimport classes from \"./ContactData.module.css\";\nimport axios from \"../../../axios-orders\";\n\nclass ContactData extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      orderForm: {\n        name: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"text\",\n            placeholder: \"Your Name\"\n          },\n          value: \"\"\n        },\n        street: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"text\",\n            placeholder: \"Street\"\n          },\n          value: \"\"\n        },\n        zipCode: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"text\",\n            placeholder: \"ZIP Code\"\n          },\n          value: \"\"\n        },\n        country: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"text\",\n            placeholder: \"Country\"\n          },\n          value: \"\"\n        },\n        email: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"email\",\n            placeholder: \"Your E-Mail\"\n          },\n          value: \"\"\n        },\n        deliveryMethod: {\n          elementType: \"select\",\n          elementConfig: {\n            options: [{\n              value: \"fastest\",\n              displayValue: \"Fastest\"\n            }, {\n              value: \"cheapest\",\n              displayValue: \"Cheapest\"\n            }]\n          },\n          value: \"\"\n        }\n      },\n      loading: false\n    };\n\n    this.orderHandler = event => {\n      event.preventDefault();\n      this.setState({\n        loading: true\n      });\n      const order = {\n        ingredients: this.props.ingredients,\n        price: this.props.price\n      };\n      axios.post(\"/orders.json\", order).then(response => {\n        this.setState({\n          loading: false,\n          purchasing: false\n        });\n        this.props.history.push(\"/\");\n      }).catch(error => {\n        this.setState({\n          loading: false,\n          purchasing: false\n        });\n      });\n    };\n\n    this.inputChangedHandler = (event, inputIdentifier) => {\n      const updatedOrderForm = { ...this.state.orderForm\n      };\n      const updatedFormElement = { ...updatedOrderForm[inputIdentifier]\n      };\n      updatedFormElement.value = event.target.value;\n      updatedOrderForm[inputIdentifier] = updatedFormElement;\n      this.setState({\n        orderForm: updatedOrderForm\n      });\n    };\n  }\n\n  render() {\n    const formElementsArray = [];\n\n    for (let key in this.state.orderForm) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.orderForm[key]\n      });\n    }\n\n    let form = /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [formElementsArray.map(formElement => /*#__PURE__*/_jsxDEV(Input, {\n        elementType: formElement.config.elementType,\n        elementConfig: formElement.config.elementConfig,\n        value: formElement.config.value,\n        changed: event => this.inputChangedHandler(event, formElement.id)\n      }, formElement.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 6\n      }, this)), /*#__PURE__*/_jsxDEV(Button, {\n        btnType: \"Success\",\n        clicked: this.orderHandler,\n        children: \"ORDER\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 4\n    }, this);\n\n    if (this.state.loading) {\n      form = /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.ContactData,\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Enter your Contact Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 5\n      }, this), form]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default ContactData;","map":{"version":3,"sources":["/Users/ump/Desktop/Udemy/React The Complete Guide(incl Hooks,React Rounter,Redux)/burgerbuilder/src/containers/Checkout/ContactData/ContactData.js"],"names":["React","Component","Button","Spinner","Input","classes","axios","ContactData","state","orderForm","name","elementType","elementConfig","type","placeholder","value","street","zipCode","country","email","deliveryMethod","options","displayValue","loading","orderHandler","event","preventDefault","setState","order","ingredients","props","price","post","then","response","purchasing","history","push","catch","error","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","render","formElementsArray","key","id","config","form","map","formElement"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport Button from \"../../../components/UI/Button/Button\";\nimport Spinner from \"../../../components/UI/Spinner/Spinner\";\nimport Input from \"../../../components/UI/Input/Input\";\nimport classes from \"./ContactData.module.css\";\nimport axios from \"../../../axios-orders\";\n\nclass ContactData extends Component {\n\tstate = {\n\t\torderForm: {\n\t\t\tname: {\n\t\t\t\telementType: \"input\",\n\t\t\t\telementConfig: {\n\t\t\t\t\ttype: \"text\",\n\t\t\t\t\tplaceholder: \"Your Name\",\n\t\t\t\t},\n\t\t\t\tvalue: \"\",\n\t\t\t},\n\t\t\tstreet: {\n\t\t\t\telementType: \"input\",\n\t\t\t\telementConfig: {\n\t\t\t\t\ttype: \"text\",\n\t\t\t\t\tplaceholder: \"Street\",\n\t\t\t\t},\n\t\t\t\tvalue: \"\",\n\t\t\t},\n\t\t\tzipCode: {\n\t\t\t\telementType: \"input\",\n\t\t\t\telementConfig: {\n\t\t\t\t\ttype: \"text\",\n\t\t\t\t\tplaceholder: \"ZIP Code\",\n\t\t\t\t},\n\t\t\t\tvalue: \"\",\n\t\t\t},\n\t\t\tcountry: {\n\t\t\t\telementType: \"input\",\n\t\t\t\telementConfig: {\n\t\t\t\t\ttype: \"text\",\n\t\t\t\t\tplaceholder: \"Country\",\n\t\t\t\t},\n\t\t\t\tvalue: \"\",\n\t\t\t},\n\t\t\temail: {\n\t\t\t\telementType: \"input\",\n\t\t\t\telementConfig: {\n\t\t\t\t\ttype: \"email\",\n\t\t\t\t\tplaceholder: \"Your E-Mail\",\n\t\t\t\t},\n\t\t\t\tvalue: \"\",\n\t\t\t},\n\t\t\tdeliveryMethod: {\n\t\t\t\telementType: \"select\",\n\t\t\t\telementConfig: {\n\t\t\t\t\toptions: [\n\t\t\t\t\t\t{ value: \"fastest\", displayValue: \"Fastest\" },\n\t\t\t\t\t\t{ value: \"cheapest\", displayValue: \"Cheapest\" },\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\tvalue: \"\",\n\t\t\t},\n\t\t},\n\t\tloading: false,\n\t};\n\torderHandler = (event) => {\n\t\tevent.preventDefault();\n\t\tthis.setState({ loading: true });\n\t\tconst order = {\n\t\t\tingredients: this.props.ingredients,\n\t\t\tprice: this.props.price,\n\t\t};\n\t\taxios\n\t\t\t.post(\"/orders.json\", order)\n\t\t\t.then((response) => {\n\t\t\t\tthis.setState({ loading: false, purchasing: false });\n\t\t\t\tthis.props.history.push(\"/\");\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tthis.setState({ loading: false, purchasing: false });\n\t\t\t});\n\t};\n\n\tinputChangedHandler = (event, inputIdentifier) => {\n\t\tconst updatedOrderForm = { ...this.state.orderForm };\n\t\tconst updatedFormElement = { ...updatedOrderForm[inputIdentifier] };\n\t\tupdatedFormElement.value = event.target.value;\n\t\tupdatedOrderForm[inputIdentifier] = updatedFormElement;\n\t\tthis.setState({ orderForm: updatedOrderForm });\n\t};\n\n\trender() {\n\t\tconst formElementsArray = [];\n\t\tfor (let key in this.state.orderForm) {\n\t\t\tformElementsArray.push({\n\t\t\t\tid: key,\n\t\t\t\tconfig: this.state.orderForm[key],\n\t\t\t});\n\t\t}\n\t\tlet form = (\n\t\t\t<form>\n\t\t\t\t{formElementsArray.map((formElement) => (\n\t\t\t\t\t<Input\n\t\t\t\t\t\tkey={formElement.id}\n\t\t\t\t\t\telementType={formElement.config.elementType}\n\t\t\t\t\t\telementConfig={formElement.config.elementConfig}\n\t\t\t\t\t\tvalue={formElement.config.value}\n\t\t\t\t\t\tchanged={(event) => this.inputChangedHandler(event, formElement.id)}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t\t<Button btnType='Success' clicked={this.orderHandler}>\n\t\t\t\t\tORDER\n\t\t\t\t</Button>\n\t\t\t</form>\n\t\t);\n\t\tif (this.state.loading) {\n\t\t\tform = <Spinner />;\n\t\t}\n\t\treturn (\n\t\t\t<div className={classes.ContactData}>\n\t\t\t\t<h4>Enter your Contact Data</h4>\n\t\t\t\t{form}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default ContactData;\n"]},"metadata":{},"sourceType":"module"}