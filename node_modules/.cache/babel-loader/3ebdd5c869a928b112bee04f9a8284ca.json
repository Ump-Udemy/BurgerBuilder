{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ump/Desktop/Udemy/React The Complete Guide(incl Hooks,React Rounter,Redux)/burgerbuilder/src/App.js\";\nimport React, { Component } from \"react\";\nimport { Route, Switch, withRouter, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Layout from \"./hoc/Layout/Layout\";\nimport BurgerBuilder from \"./containers/BurgerBuilder/BurgerBuilder\";\nimport Logout from \"./containers/Auth/Logout/Logout\";\nimport * as actions from \"./store/actions/index\";\nimport asyncComponent from \"./hoc/asyncComponent/asyncComponent\";\nconst asyncCheckout = asyncComponent(() => {\n  return import(\"./containers/Checkout/Checkout\");\n});\nconst asyncOrders = asyncComponent(() => {\n  return import(\"./containers/Orders/Orders\");\n});\nconst asyncAuth = asyncComponent(() => {\n  return import(\"./containers/Auth/Auth\");\n});\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onTryAutoSignup();\n  }\n\n  render() {\n    let routes = /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/auth\",\n        component: Auth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        component: BurgerBuilder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }, this);\n\n    if (this.props.isAuthenticated) {\n      routes = /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/checkout\",\n          component: Checkout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/orders\",\n          component: Orders\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/logout\",\n          component: Logout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/auth\",\n          component: Auth\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true,\n          component: BurgerBuilder\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Layout, {\n        children: routes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState())\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));","map":{"version":3,"sources":["/Users/ump/Desktop/Udemy/React The Complete Guide(incl Hooks,React Rounter,Redux)/burgerbuilder/src/App.js"],"names":["React","Component","Route","Switch","withRouter","Redirect","connect","Layout","BurgerBuilder","Logout","actions","asyncComponent","asyncCheckout","asyncOrders","asyncAuth","App","componentDidMount","props","onTryAutoSignup","render","routes","Auth","isAuthenticated","Checkout","Orders","mapStateToProps","state","auth","token","mapDispatchToProps","dispatch","authCheckState"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Route, Switch, withRouter, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport Layout from \"./hoc/Layout/Layout\";\nimport BurgerBuilder from \"./containers/BurgerBuilder/BurgerBuilder\";\nimport Logout from \"./containers/Auth/Logout/Logout\";\nimport * as actions from \"./store/actions/index\";\nimport asyncComponent from \"./hoc/asyncComponent/asyncComponent\";\n\nconst asyncCheckout = asyncComponent(() => {\n\treturn import(\"./containers/Checkout/Checkout\");\n});\n\nconst asyncOrders = asyncComponent(() => {\n\treturn import(\"./containers/Orders/Orders\");\n});\n\nconst asyncAuth = asyncComponent(() => {\n\treturn import(\"./containers/Auth/Auth\");\n});\n\nclass App extends Component {\n\tcomponentDidMount() {\n\t\tthis.props.onTryAutoSignup();\n\t}\n\trender() {\n\t\tlet routes = (\n\t\t\t<Switch>\n\t\t\t\t<Route path='/auth' component={Auth} />\n\t\t\t\t<Route path='/' exact component={BurgerBuilder} />\n\t\t\t\t<Redirect to='/' />\n\t\t\t</Switch>\n\t\t);\n\t\tif (this.props.isAuthenticated) {\n\t\t\troutes = (\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path='/checkout' component={Checkout} />\n\t\t\t\t\t<Route path='/orders' component={Orders} />\n\t\t\t\t\t<Route path='/logout' component={Logout} />\n\t\t\t\t\t<Route path='/auth' component={Auth} />\n\t\t\t\t\t<Route path='/' exact component={BurgerBuilder} />\n\t\t\t\t\t<Redirect to='/' />\n\t\t\t\t</Switch>\n\t\t\t);\n\t\t}\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Layout>{routes}</Layout>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tisAuthenticated: state.auth.token !== null,\n\t};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tonTryAutoSignup: () => dispatch(actions.authCheckState()),\n\t};\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n"]},"metadata":{},"sourceType":"module"}