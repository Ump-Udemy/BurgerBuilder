{"ast":null,"code":"import { object } from \"prop-types\";\nimport * as actionTypes from \"../actions/actionTypes\";\nimport { fetchOrderFailed, fetchOrders, purchaseBurgerSuccecc } from \"../actions/order\";\nimport { updateObject } from \"../../shared/utillity\";\nconst initialState = {\n  orders: [],\n  loading: false,\n  purchased: false\n};\n\nconst purchaseBurgerSuccess = (state, action) => {\n  const newOrder = updateObject(action.orderData, {\n    id: action.orderId\n  });\n  return updateObject(state, {\n    loading: false,\n    orders: state.orders.concat(newOrder),\n    purchased: true\n  });\n};\n\nconst purchaseBurgerFailed = (state, action) => {\n  return updateObject(state, {\n    loading: false\n  });\n};\n\nconst purchaseBurgerStart = (state, action) => {\n  return updateObject(state, {\n    loading: true\n  });\n};\n\nconst purchaseInit = (state, action) => {\n  return updateObject(state, {\n    purchased: false\n  });\n};\n\nconst fetchOrdersStart = (state, action) => {\n  return updateObject(state, {\n    loading: true\n  });\n};\n\nconst fetchOrdersSuccess = (state, action) => {\n  return updateObject(state, {\n    orders: action.orders,\n    loading: false\n  });\n};\n\nconst fetchOrdersFailed = (state, action) => {\n  return updateObject(state, {\n    loading: false\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.PURCHASE_BURGER_SUCCESS:\n      return purchaseBurgerSuccess(state, action);\n\n    case actionTypes.PURCHASE_BURGER_FAILED:\n      return purchaseBurgerFailed(state, action);\n\n    case actionTypes.PURCHASE_BURGER_START:\n      return purchaseBurgerStart(state, action);\n\n    case actionTypes.PURCHASE_INIT:\n      return purchaseInit(state, action);\n\n    case actionTypes.FETCH_ORDERS_START:\n      return fetchOrdersStart(state, action);\n\n    case actionTypes.FETCH_ORDERS_SUCCESS:\n      return fetchOrdersSuccess(state, action);\n\n    case actionTypes.FETCH_ORDERS_FAILED:\n      return fetchOrdersFailed(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/ump/Desktop/Udemy/React The Complete Guide(incl Hooks,React Rounter,Redux)/burgerbuilder/src/store/reducers/order.js"],"names":["object","actionTypes","fetchOrderFailed","fetchOrders","purchaseBurgerSuccecc","updateObject","initialState","orders","loading","purchased","purchaseBurgerSuccess","state","action","newOrder","orderData","id","orderId","concat","purchaseBurgerFailed","purchaseBurgerStart","purchaseInit","fetchOrdersStart","fetchOrdersSuccess","fetchOrdersFailed","reducer","type","PURCHASE_BURGER_SUCCESS","PURCHASE_BURGER_FAILED","PURCHASE_BURGER_START","PURCHASE_INIT","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAILED"],"mappings":"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","sourcesContent":["import { object } from \"prop-types\";\nimport * as actionTypes from \"../actions/actionTypes\";\nimport {\n\tfetchOrderFailed,\n\tfetchOrders,\n\tpurchaseBurgerSuccecc,\n} from \"../actions/order\";\nimport { updateObject } from \"../../shared/utillity\";\n\nconst initialState = {\n\torders: [],\n\tloading: false,\n\tpurchased: false,\n};\n\nconst purchaseBurgerSuccess = (state, action) => {\n\tconst newOrder = updateObject(action.orderData, { id: action.orderId });\n\treturn updateObject(state, {\n\t\tloading: false,\n\t\torders: state.orders.concat(newOrder),\n\t\tpurchased: true,\n\t});\n};\nconst purchaseBurgerFailed = (state, action) => {\n\treturn updateObject(state, { loading: false });\n};\nconst purchaseBurgerStart = (state, action) => {\n\treturn updateObject(state, { loading: true });\n};\nconst purchaseInit = (state, action) => {\n\treturn updateObject(state, { purchased: false });\n};\nconst fetchOrdersStart = (state, action) => {\n\treturn updateObject(state, { loading: true });\n};\nconst fetchOrdersSuccess = (state, action) => {\n\treturn updateObject(state, { orders: action.orders, loading: false });\n};\nconst fetchOrdersFailed = (state, action) => {\n\treturn updateObject(state, { loading: false });\n};\n\nconst reducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase actionTypes.PURCHASE_BURGER_SUCCESS:\n\t\t\treturn purchaseBurgerSuccess(state, action);\n\n\t\tcase actionTypes.PURCHASE_BURGER_FAILED:\n\t\t\treturn purchaseBurgerFailed(state, action);\n\n\t\tcase actionTypes.PURCHASE_BURGER_START:\n\t\t\treturn purchaseBurgerStart(state, action);\n\n\t\tcase actionTypes.PURCHASE_INIT:\n\t\t\treturn purchaseInit(state, action);\n\n\t\tcase actionTypes.FETCH_ORDERS_START:\n\t\t\treturn fetchOrdersStart(state, action);\n\n\t\tcase actionTypes.FETCH_ORDERS_SUCCESS:\n\t\t\treturn fetchOrdersSuccess(state, action);\n\n\t\tcase actionTypes.FETCH_ORDERS_FAILED:\n\t\t\treturn fetchOrdersFailed(state, action);\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}