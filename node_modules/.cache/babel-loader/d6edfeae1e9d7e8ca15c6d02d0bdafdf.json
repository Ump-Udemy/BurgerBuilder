{"ast":null,"code":"import axios from \"axios\";\nimport * as actionTypes from \"./actionTypes\";\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport const authSuccess = (token, userId) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    idToken: token,\n    userId: userId\n  };\n};\nexport const authFailed = error => {\n  return {\n    type: actionTypes.AUTH_FAILED,\n    error: error\n  };\n};\nexport const logout = () => {\n  // localStorage.removeItem(\"token\");\n  // localStorage.removeItem(\"expirationDate\");\n  // localStorage.removeItem(\"userId\");\n  return {\n    type: actionTypes.AUTH_INITIATE_LOGOUT\n  };\n};\nexport const checkAuthTimeout = expirationTime => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, expirationTime * 1000);\n  };\n};\nexport const auth = (email, password, isSignup) => {\n  return dispatch => {\n    dispatch(authStart());\n    const authData = {\n      email: email,\n      password: password,\n      returnSecureToken: true\n    };\n    let url = \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyC7Z7IBWL-_SLT1bjJ3w9GY5XAC7-1ogb8\";\n\n    if (!isSignup) {\n      url = \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyC7Z7IBWL-_SLT1bjJ3w9GY5XAC7-1ogb8\";\n    }\n\n    axios.post(url, authData).then(response => {\n      const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000);\n      localStorage.setItem(\"token\", response.data.idToken);\n      localStorage.setItem(\"expirationDate\", expirationDate);\n      localStorage.setItem(\"userId\", response.data.localId);\n      dispatch(authSuccess(response.data.idToken, response.data.localId));\n      dispatch(checkAuthTimeout(response.data.expiresIn));\n    }).catch(error => {\n      dispatch(authFailed(error.response.data.error));\n    });\n  };\n};\nexport const setAuthRediectPath = path => {\n  return {\n    type: actionTypes.SET_AUTH_REDIRECT_PATH,\n    path: path\n  };\n};\nexport const authCheckState = () => {\n  return dispatch => {\n    const token = localStorage.getItem(\"token\");\n\n    if (!token) {\n      dispatch(logout());\n    } else {\n      const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\n\n      if (expirationDate <= new Date()) {\n        dispatch(logout());\n      } else {\n        const userId = localStorage.getItem(\"userId\");\n        dispatch(authSuccess(token, userId));\n        dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\n      }\n    }\n  };\n};","map":{"version":3,"sources":["/Users/ump/Desktop/Udemy/React The Complete Guide(incl Hooks,React Rounter,Redux)/burgerbuilder/src/store/actions/auth.js"],"names":["axios","actionTypes","authStart","type","AUTH_START","authSuccess","token","userId","AUTH_SUCCESS","idToken","authFailed","error","AUTH_FAILED","logout","AUTH_INITIATE_LOGOUT","checkAuthTimeout","expirationTime","dispatch","setTimeout","auth","email","password","isSignup","authData","returnSecureToken","url","post","then","response","expirationDate","Date","getTime","data","expiresIn","localStorage","setItem","localId","catch","setAuthRediectPath","path","SET_AUTH_REDIRECT_PATH","authCheckState","getItem"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\nimport * as actionTypes from \"./actionTypes\";\n\nexport const authStart = () => {\n\treturn {\n\t\ttype: actionTypes.AUTH_START,\n\t};\n};\n\nexport const authSuccess = (token, userId) => {\n\treturn {\n\t\ttype: actionTypes.AUTH_SUCCESS,\n\t\tidToken: token,\n\t\tuserId: userId,\n\t};\n};\n\nexport const authFailed = (error) => {\n\treturn {\n\t\ttype: actionTypes.AUTH_FAILED,\n\t\terror: error,\n\t};\n};\n\nexport const logout = () => {\n\t// localStorage.removeItem(\"token\");\n\t// localStorage.removeItem(\"expirationDate\");\n\t// localStorage.removeItem(\"userId\");\n\treturn {\n\t\ttype: actionTypes.AUTH_INITIATE_LOGOUT,\n\t};\n};\n\nexport const checkAuthTimeout = (expirationTime) => {\n\treturn (dispatch) => {\n\t\tsetTimeout(() => {\n\t\t\tdispatch(logout());\n\t\t}, expirationTime * 1000);\n\t};\n};\n\nexport const auth = (email, password, isSignup) => {\n\treturn (dispatch) => {\n\t\tdispatch(authStart());\n\t\tconst authData = {\n\t\t\temail: email,\n\t\t\tpassword: password,\n\t\t\treturnSecureToken: true,\n\t\t};\n\t\tlet url =\n\t\t\t\"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyC7Z7IBWL-_SLT1bjJ3w9GY5XAC7-1ogb8\";\n\t\tif (!isSignup) {\n\t\t\turl =\n\t\t\t\t\"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyC7Z7IBWL-_SLT1bjJ3w9GY5XAC7-1ogb8\";\n\t\t}\n\t\taxios\n\t\t\t.post(url, authData)\n\t\t\t.then((response) => {\n\t\t\t\tconst expirationDate = new Date(\n\t\t\t\t\tnew Date().getTime() + response.data.expiresIn * 1000\n\t\t\t\t);\n\t\t\t\tlocalStorage.setItem(\"token\", response.data.idToken);\n\t\t\t\tlocalStorage.setItem(\"expirationDate\", expirationDate);\n\t\t\t\tlocalStorage.setItem(\"userId\", response.data.localId);\n\t\t\t\tdispatch(authSuccess(response.data.idToken, response.data.localId));\n\t\t\t\tdispatch(checkAuthTimeout(response.data.expiresIn));\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tdispatch(authFailed(error.response.data.error));\n\t\t\t});\n\t};\n};\n\nexport const setAuthRediectPath = (path) => {\n\treturn {\n\t\ttype: actionTypes.SET_AUTH_REDIRECT_PATH,\n\t\tpath: path,\n\t};\n};\n\nexport const authCheckState = () => {\n\treturn (dispatch) => {\n\t\tconst token = localStorage.getItem(\"token\");\n\t\tif (!token) {\n\t\t\tdispatch(logout());\n\t\t} else {\n\t\t\tconst expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\n\t\t\tif (expirationDate <= new Date()) {\n\t\t\t\tdispatch(logout());\n\t\t\t} else {\n\t\t\t\tconst userId = localStorage.getItem(\"userId\");\n\t\t\t\tdispatch(authSuccess(token, userId));\n\t\t\t\tdispatch(\n\t\t\t\t\tcheckAuthTimeout(\n\t\t\t\t\t\t(expirationDate.getTime() - new Date().getTime()) / 1000\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}