{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ump/Desktop/Udemy/React The Complete Guide(incl Hooks,React Rounter,Redux)/burgerbuilder/src/containers/Auth/Auth.js\";\nimport React, { Component } from \"react\";\nimport classes from \"./Auth.module.css\";\nimport Input from \"../../components/UI/Input/Input\";\nimport Button from \"../../components/UI/Button/Button\";\n\nclass Auth extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      controls: {\n        email: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"email\",\n            placeholder: \"Mail Address\"\n          },\n          value: \"\",\n          validation: {\n            required: true,\n            isEmail: true\n          },\n          valid: false,\n          touched: false\n        },\n        password: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"password\",\n            placeholder: \"Password\"\n          },\n          value: \"\",\n          validation: {\n            required: true,\n            minLength: 6\n          },\n          valid: false,\n          touched: false\n        }\n      }\n    };\n\n    this.inputChangedHandler = (event, controlName) => {\n      const updatedControls = { ...this.state.controls,\n        [controlName]: { ...this.state.controls[controlName],\n          value: event.target.value,\n          valid: this.checkValidaity(event.target.value, this.state.controls[controlName].validation),\n          touched: true\n        }\n      };\n      this.setState({\n        updatedControls\n      });\n      console.log(this.state);\n    };\n  }\n\n  checkValidaity(value, rules) {\n    let isValid = true;\n\n    if (rules.required) {\n      isValid = value.trim() !== \" \" && isValid;\n    }\n\n    if (rules.minLength) {\n      isValid = value.length >= rules.minLength && isValid;\n    }\n\n    if (rules.maxLength) {\n      isValid = value.length <= rules.maxLength && isValid;\n    }\n\n    return isValid;\n  }\n\n  render() {\n    const formElementsArray = [];\n\n    for (let key in this.state.controls) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.controls[key]\n      });\n    }\n\n    const form = formElementsArray.map(formElement => /*#__PURE__*/_jsxDEV(Input, {\n      elementType: formElement.config.elementType,\n      elementConfig: formElement.config.elementConfig,\n      value: formElement.config.value,\n      invalid: !formElement.config.valid,\n      shouldValidate: formElement.config.validation,\n      touched: formElement.config.touched,\n      changed: event => this.inputChangedHandler(event, formElement.id)\n    }, formElement.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 4\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.Auth,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [form, /*#__PURE__*/_jsxDEV(Button, {\n          btnType: \"Success\",\n          children: \"SUBMIT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default Auth;","map":{"version":3,"sources":["/Users/ump/Desktop/Udemy/React The Complete Guide(incl Hooks,React Rounter,Redux)/burgerbuilder/src/containers/Auth/Auth.js"],"names":["React","Component","classes","Input","Button","Auth","state","controls","email","elementType","elementConfig","type","placeholder","value","validation","required","isEmail","valid","touched","password","minLength","inputChangedHandler","event","controlName","updatedControls","target","checkValidaity","setState","console","log","rules","isValid","trim","length","maxLength","render","formElementsArray","key","push","id","config","form","map","formElement"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport classes from \"./Auth.module.css\";\n\nimport Input from \"../../components/UI/Input/Input\";\nimport Button from \"../../components/UI/Button/Button\";\n\nclass Auth extends Component {\n\tstate = {\n\t\tcontrols: {\n\t\t\temail: {\n\t\t\t\telementType: \"input\",\n\t\t\t\telementConfig: {\n\t\t\t\t\ttype: \"email\",\n\t\t\t\t\tplaceholder: \"Mail Address\",\n\t\t\t\t},\n\t\t\t\tvalue: \"\",\n\t\t\t\tvalidation: {\n\t\t\t\t\trequired: true,\n\t\t\t\t\tisEmail: true,\n\t\t\t\t},\n\t\t\t\tvalid: false,\n\t\t\t\ttouched: false,\n\t\t\t},\n\t\t\tpassword: {\n\t\t\t\telementType: \"input\",\n\t\t\t\telementConfig: {\n\t\t\t\t\ttype: \"password\",\n\t\t\t\t\tplaceholder: \"Password\",\n\t\t\t\t},\n\t\t\t\tvalue: \"\",\n\t\t\t\tvalidation: {\n\t\t\t\t\trequired: true,\n\t\t\t\t\tminLength: 6,\n\t\t\t\t},\n\t\t\t\tvalid: false,\n\t\t\t\ttouched: false,\n\t\t\t},\n\t\t},\n\t};\n\n\tcheckValidaity(value, rules) {\n\t\tlet isValid = true;\n\t\tif (rules.required) {\n\t\t\tisValid = value.trim() !== \" \" && isValid;\n\t\t}\n\n\t\tif (rules.minLength) {\n\t\t\tisValid = value.length >= rules.minLength && isValid;\n\t\t}\n\n\t\tif (rules.maxLength) {\n\t\t\tisValid = value.length <= rules.maxLength && isValid;\n\t\t}\n\n\t\treturn isValid;\n\t}\n\n\tinputChangedHandler = (event, controlName) => {\n\t\tconst updatedControls = {\n\t\t\t...this.state.controls,\n\t\t\t[controlName]: {\n\t\t\t\t...this.state.controls[controlName],\n\t\t\t\tvalue: event.target.value,\n\t\t\t\tvalid: this.checkValidaity(\n\t\t\t\t\tevent.target.value,\n\t\t\t\t\tthis.state.controls[controlName].validation\n\t\t\t\t),\n\t\t\t\ttouched: true,\n\t\t\t},\n\t\t};\n\t\tthis.setState({ updatedControls });\n\t\tconsole.log(this.state);\n\t};\n\n\trender() {\n\t\tconst formElementsArray = [];\n\t\tfor (let key in this.state.controls) {\n\t\t\tformElementsArray.push({\n\t\t\t\tid: key,\n\t\t\t\tconfig: this.state.controls[key],\n\t\t\t});\n\t\t}\n\t\tconst form = formElementsArray.map((formElement) => (\n\t\t\t<Input\n\t\t\t\tkey={formElement.id}\n\t\t\t\telementType={formElement.config.elementType}\n\t\t\t\telementConfig={formElement.config.elementConfig}\n\t\t\t\tvalue={formElement.config.value}\n\t\t\t\tinvalid={!formElement.config.valid}\n\t\t\t\tshouldValidate={formElement.config.validation}\n\t\t\t\ttouched={formElement.config.touched}\n\t\t\t\tchanged={(event) => this.inputChangedHandler(event, formElement.id)}\n\t\t\t/>\n\t\t));\n\t\treturn (\n\t\t\t<div className={classes.Auth}>\n\t\t\t\t<form>\n\t\t\t\t\t{form}\n\t\t\t\t\t<Button btnType='Success'>SUBMIT</Button>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Auth;\n"]},"metadata":{},"sourceType":"module"}