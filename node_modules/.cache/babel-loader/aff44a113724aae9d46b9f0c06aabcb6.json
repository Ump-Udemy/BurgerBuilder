{"ast":null,"code":"import * as actionTypes from \"./actionTypes\";\nimport axios from \"../../axios-orders\";\nexport const purchaseBurgerSuccecc = (id, orderData) => {\n  return {\n    type: actionTypes.PURCHASE_BURGER_SUCCESS,\n    orderId: id,\n    orderData: orderData\n  };\n};\nexport const purchaseBurgerFailed = error => {\n  return {\n    type: actionTypes.PURCHASE_BURGER_FAILED,\n    error: error\n  };\n};\nexport const purchaseBurgerStart = orderData => {\n  return dispatch => {\n    axios.post(\"/orders.json\", orderData).then(response => {\n      dispatch(purchaseBurgerSuccecc(response.data, orderData));\n    }).catch(error => {\n      dispatch(purchaseBurgerFailed(error));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/ump/Desktop/Udemy/React The Complete Guide(incl Hooks,React Rounter,Redux)/burgerbuilder/src/store/actions/order.js"],"names":["actionTypes","axios","purchaseBurgerSuccecc","id","orderData","type","PURCHASE_BURGER_SUCCESS","orderId","purchaseBurgerFailed","error","PURCHASE_BURGER_FAILED","purchaseBurgerStart","dispatch","post","then","response","data","catch"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,OAAO,MAAMC,qBAAqB,GAAG,CAACC,EAAD,EAAKC,SAAL,KAAmB;AACvD,SAAO;AACNC,IAAAA,IAAI,EAAEL,WAAW,CAACM,uBADZ;AAENC,IAAAA,OAAO,EAAEJ,EAFH;AAGNC,IAAAA,SAAS,EAAEA;AAHL,GAAP;AAKA,CANM;AAQP,OAAO,MAAMI,oBAAoB,GAAIC,KAAD,IAAW;AAC9C,SAAO;AACNJ,IAAAA,IAAI,EAAEL,WAAW,CAACU,sBADZ;AAEND,IAAAA,KAAK,EAAEA;AAFD,GAAP;AAIA,CALM;AAOP,OAAO,MAAME,mBAAmB,GAAIP,SAAD,IAAe;AACjD,SAAQQ,QAAD,IAAc;AACpBX,IAAAA,KAAK,CACHY,IADF,CACO,cADP,EACuBT,SADvB,EAEEU,IAFF,CAEQC,QAAD,IAAc;AACnBH,MAAAA,QAAQ,CAACV,qBAAqB,CAACa,QAAQ,CAACC,IAAV,EAAgBZ,SAAhB,CAAtB,CAAR;AACA,KAJF,EAKEa,KALF,CAKSR,KAAD,IAAW;AACjBG,MAAAA,QAAQ,CAACJ,oBAAoB,CAACC,KAAD,CAArB,CAAR;AACA,KAPF;AAQA,GATD;AAUA,CAXM","sourcesContent":["import * as actionTypes from \"./actionTypes\";\nimport axios from \"../../axios-orders\";\n\nexport const purchaseBurgerSuccecc = (id, orderData) => {\n\treturn {\n\t\ttype: actionTypes.PURCHASE_BURGER_SUCCESS,\n\t\torderId: id,\n\t\torderData: orderData,\n\t};\n};\n\nexport const purchaseBurgerFailed = (error) => {\n\treturn {\n\t\ttype: actionTypes.PURCHASE_BURGER_FAILED,\n\t\terror: error,\n\t};\n};\n\nexport const purchaseBurgerStart = (orderData) => {\n\treturn (dispatch) => {\n\t\taxios\n\t\t\t.post(\"/orders.json\", orderData)\n\t\t\t.then((response) => {\n\t\t\t\tdispatch(purchaseBurgerSuccecc(response.data, orderData));\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tdispatch(purchaseBurgerFailed(error));\n\t\t\t});\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}