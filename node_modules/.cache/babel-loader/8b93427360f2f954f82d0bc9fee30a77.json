{"ast":null,"code":"import * as actionTypes from \"../actions/actionTypes\";\nconst initialState = {\n  orders: [],\n  loading: false,\n  purchased: false\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.PURCHASE_BURGER_SUCCESS:\n      const newOrder = { ...action.orderData,\n        id: action.orderId\n      };\n      return { ...state,\n        loading: false,\n        orders: state.orders.concat(newOrder),\n        purchased: true\n      };\n\n    case actionTypes.PURCHASE_BURGER_FAILED:\n      return { ...state,\n        loading: false\n      };\n\n    case actionTypes.PURCHASE_BURGER_START:\n      return { ...state,\n        loading: true\n      };\n\n    case actionTypes.PURCHASE_INIT:\n      return { ...state,\n        purchased: false\n      };\n\n    case actionTypes.FETCH_ORDERS_START:\n      return { ...state,\n        loading: true\n      };\n\n    case actionTypes.FETCH_ORDERS_SUCCESS:\n      return { ...state,\n        orders: action.orders,\n        loading: false\n      };\n\n    case actionTypes.FETCH_ORDERS_FAILED:\n      return { ...state,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/ump/Desktop/Udemy/React The Complete Guide(incl Hooks,React Rounter,Redux)/burgerbuilder/src/store/reducers/order.js"],"names":["actionTypes","initialState","orders","loading","purchased","reducer","state","action","type","PURCHASE_BURGER_SUCCESS","newOrder","orderData","id","orderId","concat","PURCHASE_BURGER_FAILED","PURCHASE_BURGER_START","PURCHASE_INIT","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAILED"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AAEA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,MAAM,EAAE,EADY;AAEpBC,EAAAA,OAAO,EAAE,KAFW;AAGpBC,EAAAA,SAAS,EAAE;AAHS,CAArB;;AAMA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AACjD,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKR,WAAW,CAACS,uBAAjB;AACC,YAAMC,QAAQ,GAAG,EAChB,GAAGH,MAAM,CAACI,SADM;AAEhBC,QAAAA,EAAE,EAAEL,MAAM,CAACM;AAFK,OAAjB;AAIA,aAAO,EACN,GAAGP,KADG;AAENH,QAAAA,OAAO,EAAE,KAFH;AAGND,QAAAA,MAAM,EAAEI,KAAK,CAACJ,MAAN,CAAaY,MAAb,CAAoBJ,QAApB,CAHF;AAINN,QAAAA,SAAS,EAAE;AAJL,OAAP;;AAMD,SAAKJ,WAAW,CAACe,sBAAjB;AACC,aAAO,EAAE,GAAGT,KAAL;AAAYH,QAAAA,OAAO,EAAE;AAArB,OAAP;;AACD,SAAKH,WAAW,CAACgB,qBAAjB;AACC,aAAO,EAAE,GAAGV,KAAL;AAAYH,QAAAA,OAAO,EAAE;AAArB,OAAP;;AACD,SAAKH,WAAW,CAACiB,aAAjB;AACC,aAAO,EAAE,GAAGX,KAAL;AAAYF,QAAAA,SAAS,EAAE;AAAvB,OAAP;;AACD,SAAKJ,WAAW,CAACkB,kBAAjB;AACC,aAAO,EACN,GAAGZ,KADG;AAENH,QAAAA,OAAO,EAAE;AAFH,OAAP;;AAID,SAAKH,WAAW,CAACmB,oBAAjB;AACC,aAAO,EACN,GAAGb,KADG;AAENJ,QAAAA,MAAM,EAAEK,MAAM,CAACL,MAFT;AAGNC,QAAAA,OAAO,EAAE;AAHH,OAAP;;AAKD,SAAKH,WAAW,CAACoB,mBAAjB;AACC,aAAO,EACN,GAAGd,KADG;AAENH,QAAAA,OAAO,EAAE;AAFH,OAAP;;AAID;AACC,aAAOG,KAAP;AAnCF;AAqCA,CAtCD;;AAwCA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n\torders: [],\n\tloading: false,\n\tpurchased: false,\n};\n\nconst reducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase actionTypes.PURCHASE_BURGER_SUCCESS:\n\t\t\tconst newOrder = {\n\t\t\t\t...action.orderData,\n\t\t\t\tid: action.orderId,\n\t\t\t};\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: false,\n\t\t\t\torders: state.orders.concat(newOrder),\n\t\t\t\tpurchased: true,\n\t\t\t};\n\t\tcase actionTypes.PURCHASE_BURGER_FAILED:\n\t\t\treturn { ...state, loading: false };\n\t\tcase actionTypes.PURCHASE_BURGER_START:\n\t\t\treturn { ...state, loading: true };\n\t\tcase actionTypes.PURCHASE_INIT:\n\t\t\treturn { ...state, purchased: false };\n\t\tcase actionTypes.FETCH_ORDERS_START:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: true,\n\t\t\t};\n\t\tcase actionTypes.FETCH_ORDERS_SUCCESS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\torders: action.orders,\n\t\t\t\tloading: false,\n\t\t\t};\n\t\tcase actionTypes.FETCH_ORDERS_FAILED:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: false,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}