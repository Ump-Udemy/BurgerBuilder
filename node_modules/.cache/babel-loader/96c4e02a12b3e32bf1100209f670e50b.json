{"ast":null,"code":"import * as actionTypes from \"../actions/actionTypes\";\nimport { updataObject } from \"../utillity\";\nconst initialState = {\n  ingredients: null,\n  totalPrice: 4,\n  error: false\n};\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_INGREDIENT:\n      const updatedIngredient = {\n        [action.ingredientName]: state.ingredients[action.ingredientName] + 1\n      };\n      const updatedIngredients = updataObject(state.ingredients, updatedIngredient);\n      const updatedState = {\n        ingredents: updatedIngredients,\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\n      };\n      return updataObject(state, updatedState);\n\n    case actionTypes.REMOVE_INGREDIENT:\n      return { ...state,\n        ingredients: { ...state.ingredients,\n          [action.ingredientName]: state.ingredients[action.ingredientName] - 1\n        },\n        totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName]\n      };\n\n    case actionTypes.SET_INGREDIENTS:\n      return { ...state,\n        ingredients: {\n          salad: action.ingredients.salad,\n          bacon: action.ingredients.bacon,\n          cheese: action.ingredients.cheese,\n          meat: action.ingredients.meat\n        },\n        totalPrice: 4,\n        error: false\n      };\n\n    case actionTypes.FETCH_INGREDIENTS_FAILED:\n      return { ...state,\n        error: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/ump/Desktop/Udemy/React The Complete Guide(incl Hooks,React Rounter,Redux)/burgerbuilder/src/store/reducers/burgerBuilder.js"],"names":["actionTypes","updataObject","initialState","ingredients","totalPrice","error","INGREDIENT_PRICES","salad","cheese","meat","bacon","reducer","state","action","type","ADD_INGREDIENT","updatedIngredient","ingredientName","updatedIngredients","updatedState","ingredents","REMOVE_INGREDIENT","SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,SAASC,YAAT,QAA6B,aAA7B;AAEA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,WAAW,EAAE,IADO;AAEpBC,EAAAA,UAAU,EAAE,CAFQ;AAGpBC,EAAAA,KAAK,EAAE;AAHa,CAArB;AAMA,MAAMC,iBAAiB,GAAG;AACzBC,EAAAA,KAAK,EAAE,GADkB;AAEzBC,EAAAA,MAAM,EAAE,GAFiB;AAGzBC,EAAAA,IAAI,EAAE,GAHmB;AAIzBC,EAAAA,KAAK,EAAE;AAJkB,CAA1B;;AAOA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGV,YAAT,EAAuBW,MAAvB,KAAkC;AACjD,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKd,WAAW,CAACe,cAAjB;AACC,YAAMC,iBAAiB,GAAG;AACzB,SAACH,MAAM,CAACI,cAAR,GAAyBL,KAAK,CAACT,WAAN,CAAkBU,MAAM,CAACI,cAAzB,IAA2C;AAD3C,OAA1B;AAGA,YAAMC,kBAAkB,GAAGjB,YAAY,CACtCW,KAAK,CAACT,WADgC,EAEtCa,iBAFsC,CAAvC;AAIA,YAAMG,YAAY,GAAG;AACpBC,QAAAA,UAAU,EAAEF,kBADQ;AAEpBd,QAAAA,UAAU,EAAEQ,KAAK,CAACR,UAAN,GAAmBE,iBAAiB,CAACO,MAAM,CAACI,cAAR;AAF5B,OAArB;AAIA,aAAOhB,YAAY,CAACW,KAAD,EAAQO,YAAR,CAAnB;;AACD,SAAKnB,WAAW,CAACqB,iBAAjB;AACC,aAAO,EACN,GAAGT,KADG;AAENT,QAAAA,WAAW,EAAE,EACZ,GAAGS,KAAK,CAACT,WADG;AAEZ,WAACU,MAAM,CAACI,cAAR,GAAyBL,KAAK,CAACT,WAAN,CAAkBU,MAAM,CAACI,cAAzB,IAA2C;AAFxD,SAFP;AAMNb,QAAAA,UAAU,EAAEQ,KAAK,CAACR,UAAN,GAAmBE,iBAAiB,CAACO,MAAM,CAACI,cAAR;AAN1C,OAAP;;AAQD,SAAKjB,WAAW,CAACsB,eAAjB;AACC,aAAO,EACN,GAAGV,KADG;AAENT,QAAAA,WAAW,EAAE;AACZI,UAAAA,KAAK,EAAEM,MAAM,CAACV,WAAP,CAAmBI,KADd;AAEZG,UAAAA,KAAK,EAAEG,MAAM,CAACV,WAAP,CAAmBO,KAFd;AAGZF,UAAAA,MAAM,EAAEK,MAAM,CAACV,WAAP,CAAmBK,MAHf;AAIZC,UAAAA,IAAI,EAAEI,MAAM,CAACV,WAAP,CAAmBM;AAJb,SAFP;AAQNL,QAAAA,UAAU,EAAE,CARN;AASNC,QAAAA,KAAK,EAAE;AATD,OAAP;;AAWD,SAAKL,WAAW,CAACuB,wBAAjB;AACC,aAAO,EACN,GAAGX,KADG;AAENP,QAAAA,KAAK,EAAE;AAFD,OAAP;;AAID;AACC,aAAOO,KAAP;AAzCF;AA2CA,CA5CD;;AA8CA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from \"../actions/actionTypes\";\nimport { updataObject } from \"../utillity\";\n\nconst initialState = {\n\tingredients: null,\n\ttotalPrice: 4,\n\terror: false,\n};\n\nconst INGREDIENT_PRICES = {\n\tsalad: 0.5,\n\tcheese: 0.4,\n\tmeat: 1.3,\n\tbacon: 0.7,\n};\n\nconst reducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase actionTypes.ADD_INGREDIENT:\n\t\t\tconst updatedIngredient = {\n\t\t\t\t[action.ingredientName]: state.ingredients[action.ingredientName] + 1,\n\t\t\t};\n\t\t\tconst updatedIngredients = updataObject(\n\t\t\t\tstate.ingredients,\n\t\t\t\tupdatedIngredient\n\t\t\t);\n\t\t\tconst updatedState = {\n\t\t\t\tingredents: updatedIngredients,\n\t\t\t\ttotalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\n\t\t\t};\n\t\t\treturn updataObject(state, updatedState);\n\t\tcase actionTypes.REMOVE_INGREDIENT:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tingredients: {\n\t\t\t\t\t...state.ingredients,\n\t\t\t\t\t[action.ingredientName]: state.ingredients[action.ingredientName] - 1,\n\t\t\t\t},\n\t\t\t\ttotalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\n\t\t\t};\n\t\tcase actionTypes.SET_INGREDIENTS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tingredients: {\n\t\t\t\t\tsalad: action.ingredients.salad,\n\t\t\t\t\tbacon: action.ingredients.bacon,\n\t\t\t\t\tcheese: action.ingredients.cheese,\n\t\t\t\t\tmeat: action.ingredients.meat,\n\t\t\t\t},\n\t\t\t\ttotalPrice: 4,\n\t\t\t\terror: false,\n\t\t\t};\n\t\tcase actionTypes.FETCH_INGREDIENTS_FAILED:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\terror: true,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}