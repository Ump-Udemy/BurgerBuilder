{"ast":null,"code":"import axios from \"../../axios-orders\";\nimport { put } from \"redux-saga/effects\";\nimport * as actions from \"../actions\";\nexport function* purchaseBurgerSaga(action) {\n  yield put(actions.purchaseBurgerStart());\n\n  try {\n    const response = yield axios.post(\"/orders.json?auth=\" + action.token, action.orderData);\n    yield put(actions.purchaseBurgerSuccess(response.data.name, action.orderData));\n  } catch (error) {\n    yield put(actions.purchaseBurgerFailed(error));\n  }\n}\nexport function* fetchOrdersSaga(action) {\n  yield put(actions.fetchOrdersStart());\n  const queryParams = \"?auth=\" + action.token + '&orderBy=\"userId\"&equalTo=\"' + action.userId + '\"';\n\n  try {\n    const response = yield axios.get(\"/orders.json\" + queryParams);\n    const fecthedOrders = [];\n\n    for (let key in response.data) {\n      fecthedOrders.push({ ...response.data[key],\n        id: key\n      });\n    }\n\n    yield put(actions.fetchOrdersSuccess(fecthedOrders));\n  } catch (error) {\n    yield put(actions.fetchOrderFailed(error));\n  }\n}","map":{"version":3,"sources":["/Users/ump/Desktop/Udemy/React The Complete Guide(incl Hooks,React Rounter,Redux)/burgerbuilder/src/store/sagas/order.js"],"names":["axios","put","actions","purchaseBurgerSaga","action","purchaseBurgerStart","response","post","token","orderData","purchaseBurgerSuccess","data","name","error","purchaseBurgerFailed","fetchOrdersSaga","fetchOrdersStart","queryParams","userId","get","fecthedOrders","key","push","id","fetchOrdersSuccess","fetchOrderFailed"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,SAASC,GAAT,QAAoB,oBAApB;AAEA,OAAO,KAAKC,OAAZ,MAAyB,YAAzB;AAEA,OAAO,UAAUC,kBAAV,CAA6BC,MAA7B,EAAqC;AAC3C,QAAMH,GAAG,CAACC,OAAO,CAACG,mBAAR,EAAD,CAAT;;AACA,MAAI;AACH,UAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,IAAN,CACtB,uBAAuBH,MAAM,CAACI,KADR,EAEtBJ,MAAM,CAACK,SAFe,CAAvB;AAIA,UAAMR,GAAG,CACRC,OAAO,CAACQ,qBAAR,CAA8BJ,QAAQ,CAACK,IAAT,CAAcC,IAA5C,EAAkDR,MAAM,CAACK,SAAzD,CADQ,CAAT;AAGA,GARD,CAQE,OAAOI,KAAP,EAAc;AACf,UAAMZ,GAAG,CAACC,OAAO,CAACY,oBAAR,CAA6BD,KAA7B,CAAD,CAAT;AACA;AACD;AAED,OAAO,UAAUE,eAAV,CAA0BX,MAA1B,EAAkC;AACxC,QAAMH,GAAG,CAACC,OAAO,CAACc,gBAAR,EAAD,CAAT;AACA,QAAMC,WAAW,GAChB,WACAb,MAAM,CAACI,KADP,GAEA,6BAFA,GAGAJ,MAAM,CAACc,MAHP,GAIA,GALD;;AAOA,MAAI;AACH,UAAMZ,QAAQ,GAAG,MAAMN,KAAK,CAACmB,GAAN,CAAU,iBAAiBF,WAA3B,CAAvB;AACA,UAAMG,aAAa,GAAG,EAAtB;;AACA,SAAK,IAAIC,GAAT,IAAgBf,QAAQ,CAACK,IAAzB,EAA+B;AAC9BS,MAAAA,aAAa,CAACE,IAAd,CAAmB,EAAE,GAAGhB,QAAQ,CAACK,IAAT,CAAcU,GAAd,CAAL;AAAyBE,QAAAA,EAAE,EAAEF;AAA7B,OAAnB;AACA;;AACD,UAAMpB,GAAG,CAACC,OAAO,CAACsB,kBAAR,CAA2BJ,aAA3B,CAAD,CAAT;AACA,GAPD,CAOE,OAAOP,KAAP,EAAc;AACf,UAAMZ,GAAG,CAACC,OAAO,CAACuB,gBAAR,CAAyBZ,KAAzB,CAAD,CAAT;AACA;AACD","sourcesContent":["import axios from \"../../axios-orders\";\nimport { put } from \"redux-saga/effects\";\n\nimport * as actions from \"../actions\";\n\nexport function* purchaseBurgerSaga(action) {\n\tyield put(actions.purchaseBurgerStart());\n\ttry {\n\t\tconst response = yield axios.post(\n\t\t\t\"/orders.json?auth=\" + action.token,\n\t\t\taction.orderData\n\t\t);\n\t\tyield put(\n\t\t\tactions.purchaseBurgerSuccess(response.data.name, action.orderData)\n\t\t);\n\t} catch (error) {\n\t\tyield put(actions.purchaseBurgerFailed(error));\n\t}\n}\n\nexport function* fetchOrdersSaga(action) {\n\tyield put(actions.fetchOrdersStart());\n\tconst queryParams =\n\t\t\"?auth=\" +\n\t\taction.token +\n\t\t'&orderBy=\"userId\"&equalTo=\"' +\n\t\taction.userId +\n\t\t'\"';\n\n\ttry {\n\t\tconst response = yield axios.get(\"/orders.json\" + queryParams);\n\t\tconst fecthedOrders = [];\n\t\tfor (let key in response.data) {\n\t\t\tfecthedOrders.push({ ...response.data[key], id: key });\n\t\t}\n\t\tyield put(actions.fetchOrdersSuccess(fecthedOrders));\n\t} catch (error) {\n\t\tyield put(actions.fetchOrderFailed(error));\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}