{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ump/Desktop/Udemy/React The Complete Guide(incl Hooks,React Rounter,Redux)/burgerbuilder/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from \"react\";\nimport Aux from \"../../hoc/Aux/Aux\";\nimport Burger from \"../../components/Burger/Burger\";\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\nimport axios from \"../../axios-orders\";\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      totalPrice: 4,\n      purchasable: false,\n      purchasing: false\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount + 1;\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedCount;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.removeIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      const updatedCount = oldCount - 1;\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedCount;\n      const priceDeduction = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice - priceDeduction;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.purchaseHandler = () => {\n      this.setState({\n        purchasing: true\n      });\n    };\n\n    this.purchaseCancelHandler = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    this.purchaseContinueHandler = () => {\n      //alert(\"You continue!\");\n      const order = {\n        ingredients: this.state.ingredients,\n        price: this.state.totalPrice,\n        customer: {\n          name: \"UMP\",\n          address: {\n            street: \"ABC\",\n            zipCode: \"1234\",\n            country: \"Thailand\"\n          },\n          email: \"UMP@test.com\"\n        },\n        deliveryMethod: \"fastest\"\n      };\n      axios.post(\"/orders.json\", order).then(response => {\n        console.log(response);\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n  }\n\n  updatePurchaseState(ingredients) {\n    const sum = Object.keys(ingredients).map(igKey => {\n      return ingredients[igKey];\n    }).reduce((sum, el) => {\n      return sum + el;\n    }, 0);\n    this.setState({\n      purchasable: sum > 0\n    });\n  }\n\n  render() {\n    const disabledInfo = { ...this.state.ingredients\n    };\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    } // {salad: true, meat: false, ...}\n\n\n    return /*#__PURE__*/_jsxDEV(Aux, {\n      children: [/*#__PURE__*/_jsxDEV(Modal, {\n        show: this.state.purchasing,\n        modalClosed: this.purchaseCancelHandler,\n        children: /*#__PURE__*/_jsxDEV(OrderSummary, {\n          ingredients: this.state.ingredients,\n          price: this.state.totalPrice,\n          purchaseCancelled: this.purchaseCancelHandler,\n          purchaseContinued: this.purchaseContinueHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Burger, {\n        ingredients: this.state.ingredients\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(BuildControls, {\n        ingredientAdded: this.addIngredientHandler,\n        ingredientRemoved: this.removeIngredientHandler,\n        disabled: disabledInfo,\n        purchasable: this.state.purchasable,\n        ordered: this.purchaseHandler,\n        price: this.state.totalPrice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["/Users/ump/Desktop/Udemy/React The Complete Guide(incl Hooks,React Rounter,Redux)/burgerbuilder/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","Modal","OrderSummary","axios","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","ingredients","totalPrice","purchasable","purchasing","addIngredientHandler","type","oldCount","updatedCount","updatedIngredients","priceAddition","oldPrice","newPrice","setState","updatePurchaseState","removeIngredientHandler","priceDeduction","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","order","price","customer","name","address","street","zipCode","country","email","deliveryMethod","post","then","response","console","log","catch","error","sum","Object","keys","map","igKey","reduce","el","render","disabledInfo","key"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport Aux from \"../../hoc/Aux/Aux\";\nimport Burger from \"../../components/Burger/Burger\";\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\nimport axios from \"../../axios-orders\";\nconst INGREDIENT_PRICES = {\n\tsalad: 0.5,\n\tcheese: 0.4,\n\tmeat: 1.3,\n\tbacon: 0.7,\n};\n\nclass BurgerBuilder extends Component {\n\t// constructor(props) {\n\t//     super(props);\n\t//     this.state = {...}\n\t// }\n\tstate = {\n\t\tingredients: {\n\t\t\tsalad: 0,\n\t\t\tbacon: 0,\n\t\t\tcheese: 0,\n\t\t\tmeat: 0,\n\t\t},\n\t\ttotalPrice: 4,\n\t\tpurchasable: false,\n\t\tpurchasing: false,\n\t};\n\n\tupdatePurchaseState(ingredients) {\n\t\tconst sum = Object.keys(ingredients)\n\t\t\t.map((igKey) => {\n\t\t\t\treturn ingredients[igKey];\n\t\t\t})\n\t\t\t.reduce((sum, el) => {\n\t\t\t\treturn sum + el;\n\t\t\t}, 0);\n\t\tthis.setState({ purchasable: sum > 0 });\n\t}\n\n\taddIngredientHandler = (type) => {\n\t\tconst oldCount = this.state.ingredients[type];\n\t\tconst updatedCount = oldCount + 1;\n\t\tconst updatedIngredients = {\n\t\t\t...this.state.ingredients,\n\t\t};\n\t\tupdatedIngredients[type] = updatedCount;\n\t\tconst priceAddition = INGREDIENT_PRICES[type];\n\t\tconst oldPrice = this.state.totalPrice;\n\t\tconst newPrice = oldPrice + priceAddition;\n\t\tthis.setState({ totalPrice: newPrice, ingredients: updatedIngredients });\n\t\tthis.updatePurchaseState(updatedIngredients);\n\t};\n\n\tremoveIngredientHandler = (type) => {\n\t\tconst oldCount = this.state.ingredients[type];\n\t\tif (oldCount <= 0) {\n\t\t\treturn;\n\t\t}\n\t\tconst updatedCount = oldCount - 1;\n\t\tconst updatedIngredients = {\n\t\t\t...this.state.ingredients,\n\t\t};\n\t\tupdatedIngredients[type] = updatedCount;\n\t\tconst priceDeduction = INGREDIENT_PRICES[type];\n\t\tconst oldPrice = this.state.totalPrice;\n\t\tconst newPrice = oldPrice - priceDeduction;\n\t\tthis.setState({ totalPrice: newPrice, ingredients: updatedIngredients });\n\t\tthis.updatePurchaseState(updatedIngredients);\n\t};\n\n\tpurchaseHandler = () => {\n\t\tthis.setState({ purchasing: true });\n\t};\n\n\tpurchaseCancelHandler = () => {\n\t\tthis.setState({ purchasing: false });\n\t};\n\n\tpurchaseContinueHandler = () => {\n\t\t//alert(\"You continue!\");\n\t\tconst order = {\n\t\t\tingredients: this.state.ingredients,\n\t\t\tprice: this.state.totalPrice,\n\t\t\tcustomer: {\n\t\t\t\tname: \"UMP\",\n\t\t\t\taddress: {\n\t\t\t\t\tstreet: \"ABC\",\n\t\t\t\t\tzipCode: \"1234\",\n\t\t\t\t\tcountry: \"Thailand\",\n\t\t\t\t},\n\t\t\t\temail: \"UMP@test.com\",\n\t\t\t},\n\t\t\tdeliveryMethod: \"fastest\",\n\t\t};\n\t\taxios\n\t\t\t.post(\"/orders.json\", order)\n\t\t\t.then((response) => {\n\t\t\t\tconsole.log(response);\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.log(error);\n\t\t\t});\n\t};\n\n\trender() {\n\t\tconst disabledInfo = {\n\t\t\t...this.state.ingredients,\n\t\t};\n\t\tfor (let key in disabledInfo) {\n\t\t\tdisabledInfo[key] = disabledInfo[key] <= 0;\n\t\t}\n\t\t// {salad: true, meat: false, ...}\n\t\treturn (\n\t\t\t<Aux>\n\t\t\t\t<Modal\n\t\t\t\t\tshow={this.state.purchasing}\n\t\t\t\t\tmodalClosed={this.purchaseCancelHandler}\n\t\t\t\t>\n\t\t\t\t\t<OrderSummary\n\t\t\t\t\t\tingredients={this.state.ingredients}\n\t\t\t\t\t\tprice={this.state.totalPrice}\n\t\t\t\t\t\tpurchaseCancelled={this.purchaseCancelHandler}\n\t\t\t\t\t\tpurchaseContinued={this.purchaseContinueHandler}\n\t\t\t\t\t/>\n\t\t\t\t</Modal>\n\t\t\t\t<Burger ingredients={this.state.ingredients} />\n\t\t\t\t<BuildControls\n\t\t\t\t\tingredientAdded={this.addIngredientHandler}\n\t\t\t\t\tingredientRemoved={this.removeIngredientHandler}\n\t\t\t\t\tdisabled={disabledInfo}\n\t\t\t\t\tpurchasable={this.state.purchasable}\n\t\t\t\t\tordered={this.purchaseHandler}\n\t\t\t\t\tprice={this.state.totalPrice}\n\t\t\t\t/>\n\t\t\t</Aux>\n\t\t);\n\t}\n}\n\nexport default BurgerBuilder;\n"]},"metadata":{},"sourceType":"module"}