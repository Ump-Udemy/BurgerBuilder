{"ast":null,"code":"import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utillity\";\nconst initialState = {\n  ingredients: null,\n  totalPrice: 4,\n  error: false\n};\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nconst addIngredient = (state, action) => {\n  const updatedIngredient = {\n    [action.ingredientName]: state.ingredients[action.ingredientName] + 1\n  };\n  const updatedIngredients = updateObject(state.ingredients, updatedIngredient);\n  const updatedState = {\n    ingredients: updatedIngredients,\n    totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\n  };\n  return updateObject(state, updatedState);\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_INGREDIENT:\n      return addIngredient(state, action);\n\n    case actionTypes.REMOVE_INGREDIENT:\n      const updatedIng = {\n        [action.ingredientName]: state.ingredients[action.ingredientName] - 1\n      };\n      const updatedIngs = updateObject(state.ingredients, updatedIng);\n      const updatedSt = {\n        ingredients: updatedIngs,\n        totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName]\n      };\n      return updateObject(state, updatedSt);\n\n    case actionTypes.SET_INGREDIENTS:\n      return updateObject(state, {\n        ingredients: {\n          salad: action.ingredients.salad,\n          bacon: action.ingredients.bacon,\n          cheese: action.ingredients.cheese,\n          meat: action.ingredients.meat\n        },\n        totalPrice: 4,\n        error: false\n      });\n\n    case actionTypes.FETCH_INGREDIENTS_FAILED:\n      return updateObject(state, {\n        error: true\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/ump/Desktop/Udemy/React The Complete Guide(incl Hooks,React Rounter,Redux)/burgerbuilder/src/store/reducers/burgerBuilder.js"],"names":["actionTypes","updateObject","initialState","ingredients","totalPrice","error","INGREDIENT_PRICES","salad","cheese","meat","bacon","addIngredient","state","action","updatedIngredient","ingredientName","updatedIngredients","updatedState","reducer","type","ADD_INGREDIENT","REMOVE_INGREDIENT","updatedIng","updatedIngs","updatedSt","SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,SAASC,YAAT,QAA6B,aAA7B;AAEA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,WAAW,EAAE,IADO;AAEpBC,EAAAA,UAAU,EAAE,CAFQ;AAGpBC,EAAAA,KAAK,EAAE;AAHa,CAArB;AAMA,MAAMC,iBAAiB,GAAG;AACzBC,EAAAA,KAAK,EAAE,GADkB;AAEzBC,EAAAA,MAAM,EAAE,GAFiB;AAGzBC,EAAAA,IAAI,EAAE,GAHmB;AAIzBC,EAAAA,KAAK,EAAE;AAJkB,CAA1B;;AAOA,MAAMC,aAAa,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACxC,QAAMC,iBAAiB,GAAG;AACzB,KAACD,MAAM,CAACE,cAAR,GAAyBH,KAAK,CAACT,WAAN,CAAkBU,MAAM,CAACE,cAAzB,IAA2C;AAD3C,GAA1B;AAGA,QAAMC,kBAAkB,GAAGf,YAAY,CAACW,KAAK,CAACT,WAAP,EAAoBW,iBAApB,CAAvC;AACA,QAAMG,YAAY,GAAG;AACpBd,IAAAA,WAAW,EAAEa,kBADO;AAEpBZ,IAAAA,UAAU,EAAEQ,KAAK,CAACR,UAAN,GAAmBE,iBAAiB,CAACO,MAAM,CAACE,cAAR;AAF5B,GAArB;AAIA,SAAOd,YAAY,CAACW,KAAD,EAAQK,YAAR,CAAnB;AACA,CAVD;;AAYA,MAAMC,OAAO,GAAG,CAACN,KAAK,GAAGV,YAAT,EAAuBW,MAAvB,KAAkC;AACjD,UAAQA,MAAM,CAACM,IAAf;AACC,SAAKnB,WAAW,CAACoB,cAAjB;AACC,aAAOT,aAAa,CAACC,KAAD,EAAQC,MAAR,CAApB;;AACD,SAAKb,WAAW,CAACqB,iBAAjB;AACC,YAAMC,UAAU,GAAG;AAClB,SAACT,MAAM,CAACE,cAAR,GAAyBH,KAAK,CAACT,WAAN,CAAkBU,MAAM,CAACE,cAAzB,IAA2C;AADlD,OAAnB;AAGA,YAAMQ,WAAW,GAAGtB,YAAY,CAACW,KAAK,CAACT,WAAP,EAAoBmB,UAApB,CAAhC;AACA,YAAME,SAAS,GAAG;AACjBrB,QAAAA,WAAW,EAAEoB,WADI;AAEjBnB,QAAAA,UAAU,EAAEQ,KAAK,CAACR,UAAN,GAAmBE,iBAAiB,CAACO,MAAM,CAACE,cAAR;AAF/B,OAAlB;AAIA,aAAOd,YAAY,CAACW,KAAD,EAAQY,SAAR,CAAnB;;AACD,SAAKxB,WAAW,CAACyB,eAAjB;AACC,aAAOxB,YAAY,CAACW,KAAD,EAAQ;AAC1BT,QAAAA,WAAW,EAAE;AACZI,UAAAA,KAAK,EAAEM,MAAM,CAACV,WAAP,CAAmBI,KADd;AAEZG,UAAAA,KAAK,EAAEG,MAAM,CAACV,WAAP,CAAmBO,KAFd;AAGZF,UAAAA,MAAM,EAAEK,MAAM,CAACV,WAAP,CAAmBK,MAHf;AAIZC,UAAAA,IAAI,EAAEI,MAAM,CAACV,WAAP,CAAmBM;AAJb,SADa;AAO1BL,QAAAA,UAAU,EAAE,CAPc;AAQ1BC,QAAAA,KAAK,EAAE;AARmB,OAAR,CAAnB;;AAUD,SAAKL,WAAW,CAAC0B,wBAAjB;AACC,aAAOzB,YAAY,CAACW,KAAD,EAAQ;AAAEP,QAAAA,KAAK,EAAE;AAAT,OAAR,CAAnB;;AACD;AACC,aAAOO,KAAP;AA3BF;AA6BA,CA9BD;;AAgCA,eAAeM,OAAf","sourcesContent":["import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utillity\";\n\nconst initialState = {\n\tingredients: null,\n\ttotalPrice: 4,\n\terror: false,\n};\n\nconst INGREDIENT_PRICES = {\n\tsalad: 0.5,\n\tcheese: 0.4,\n\tmeat: 1.3,\n\tbacon: 0.7,\n};\n\nconst addIngredient = (state, action) => {\n\tconst updatedIngredient = {\n\t\t[action.ingredientName]: state.ingredients[action.ingredientName] + 1,\n\t};\n\tconst updatedIngredients = updateObject(state.ingredients, updatedIngredient);\n\tconst updatedState = {\n\t\tingredients: updatedIngredients,\n\t\ttotalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\n\t};\n\treturn updateObject(state, updatedState);\n};\n\nconst reducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase actionTypes.ADD_INGREDIENT:\n\t\t\treturn addIngredient(state, action);\n\t\tcase actionTypes.REMOVE_INGREDIENT:\n\t\t\tconst updatedIng = {\n\t\t\t\t[action.ingredientName]: state.ingredients[action.ingredientName] - 1,\n\t\t\t};\n\t\t\tconst updatedIngs = updateObject(state.ingredients, updatedIng);\n\t\t\tconst updatedSt = {\n\t\t\t\tingredients: updatedIngs,\n\t\t\t\ttotalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\n\t\t\t};\n\t\t\treturn updateObject(state, updatedSt);\n\t\tcase actionTypes.SET_INGREDIENTS:\n\t\t\treturn updateObject(state, {\n\t\t\t\tingredients: {\n\t\t\t\t\tsalad: action.ingredients.salad,\n\t\t\t\t\tbacon: action.ingredients.bacon,\n\t\t\t\t\tcheese: action.ingredients.cheese,\n\t\t\t\t\tmeat: action.ingredients.meat,\n\t\t\t\t},\n\t\t\t\ttotalPrice: 4,\n\t\t\t\terror: false,\n\t\t\t});\n\t\tcase actionTypes.FETCH_INGREDIENTS_FAILED:\n\t\t\treturn updateObject(state, { error: true });\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}