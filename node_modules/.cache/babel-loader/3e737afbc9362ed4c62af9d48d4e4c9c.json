{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ump/Desktop/Udemy/React The Complete Guide(incl Hooks,React Rounter,Redux)/burgerbuilder/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Aux from \"../../hoc/Aux/Aux\";\nimport Burger from \"../../components/Burger/Burger\";\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\nimport axios from \"../../axios-orders\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: null,\n      totalPrice: 4,\n      purchasable: false,\n      purchasing: false,\n      loading: false,\n      error: false\n    };\n\n    this.componentDidMount = () => {\n      console.log(this.props); // axios\n      // \t.get(\"/ingredients.json\")\n      // \t.then((response) => {\n      // \t\tthis.setState({ ingredients: response.data });\n      // \t\t//this.updatePurchaseState();\n      // \t})\n      // \t.catch((error) => {\n      // \t\tthis.setState({ error: true });\n      // \t});\n      // this.updatePurchaseState();\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount + 1;\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedCount;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.removeIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      const updatedCount = oldCount - 1;\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedCount;\n      const priceDeduction = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice - priceDeduction;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.purchaseHandler = () => {\n      this.setState({\n        purchasing: true\n      });\n    };\n\n    this.purchaseCancelHandler = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    this.purchaseContinueHandler = () => {\n      //alert(\"You continue!\");\n      const queryParams = [];\n\n      for (let i in this.state.ingredients) {\n        queryParams.push(encodeURIComponent(i) + \"=\" + encodeURIComponent(this.state.ingredients[i]));\n      }\n\n      queryParams.push(\"price=\" + this.state.totalPrice);\n      const queryString = queryParams.join(\"&\");\n      this.props.history.push({\n        pathname: \"/checkout\",\n        search: \"?\" + queryString\n      });\n    };\n  }\n\n  updatePurchaseState(ingredients) {\n    const sum = Object.keys(ingredients).map(igKey => {\n      return ingredients[igKey];\n    }).reduce((sum, el) => {\n      return sum + el;\n    }, 0); //console.log(sum);\n\n    this.setState({\n      purchasable: sum > 0\n    });\n  }\n\n  render() {\n    const disabledInfo = { ...this.state.ingredients\n    };\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    } // {salad: true, meat: false, ...}\n\n\n    let orderSummary = null;\n\n    if (this.state.loading) {\n      orderSummary = /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 19\n      }, this);\n    }\n\n    let burger = this.state.error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Ingredients can't be loaded\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 4\n    }, this) : /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 4\n    }, this);\n\n    if (this.state.ingredients) {\n      burger = /*#__PURE__*/_jsxDEV(Aux, {\n        children: [/*#__PURE__*/_jsxDEV(Burger, {\n          ingredients: this.state.ingredients\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(BuildControls, {\n          ingredientAdded: this.addIngredientHandler,\n          ingredientRemoved: this.removeIngredientHandler,\n          disabled: disabledInfo,\n          purchasable: this.state.purchasable,\n          ordered: this.purchaseHandler,\n          price: this.state.totalPrice\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 5\n      }, this);\n      orderSummary = /*#__PURE__*/_jsxDEV(OrderSummary, {\n        ingredients: this.state.ingredients,\n        price: this.state.totalPrice,\n        purchaseCancelled: this.purchaseCancelHandler,\n        purchaseContinued: this.purchaseContinueHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 5\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Aux, {\n      children: [/*#__PURE__*/_jsxDEV(Modal, {\n        show: this.state.purchasing,\n        modalClosed: this.purchaseCancelHandler,\n        children: orderSummary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 5\n      }, this), burger]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default _c = withErrorHandler(BurgerBuilder, axios);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/ump/Desktop/Udemy/React The Complete Guide(incl Hooks,React Rounter,Redux)/burgerbuilder/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","connect","Aux","Burger","BuildControls","Modal","OrderSummary","axios","Spinner","withErrorHandler","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","ingredients","totalPrice","purchasable","purchasing","loading","error","componentDidMount","console","log","props","addIngredientHandler","type","oldCount","updatedCount","updatedIngredients","priceAddition","oldPrice","newPrice","setState","updatePurchaseState","removeIngredientHandler","priceDeduction","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","queryParams","i","push","encodeURIComponent","queryString","join","history","pathname","search","sum","Object","keys","map","igKey","reduce","el","render","disabledInfo","key","orderSummary","burger"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Aux from \"../../hoc/Aux/Aux\";\nimport Burger from \"../../components/Burger/Burger\";\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\nimport axios from \"../../axios-orders\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\n\nconst INGREDIENT_PRICES = {\n\tsalad: 0.5,\n\tcheese: 0.4,\n\tmeat: 1.3,\n\tbacon: 0.7,\n};\n\nclass BurgerBuilder extends Component {\n\t// constructor(props) {\n\t//     super(props);\n\t//     this.state = {...}\n\t// }\n\tstate = {\n\t\tingredients: null,\n\t\ttotalPrice: 4,\n\t\tpurchasable: false,\n\t\tpurchasing: false,\n\t\tloading: false,\n\t\terror: false,\n\t};\n\n\tcomponentDidMount = () => {\n\t\tconsole.log(this.props);\n\t\t// axios\n\t\t// \t.get(\"/ingredients.json\")\n\t\t// \t.then((response) => {\n\t\t// \t\tthis.setState({ ingredients: response.data });\n\t\t// \t\t//this.updatePurchaseState();\n\t\t// \t})\n\t\t// \t.catch((error) => {\n\t\t// \t\tthis.setState({ error: true });\n\t\t// \t});\n\t\t// this.updatePurchaseState();\n\t};\n\n\tupdatePurchaseState(ingredients) {\n\t\tconst sum = Object.keys(ingredients)\n\t\t\t.map((igKey) => {\n\t\t\t\treturn ingredients[igKey];\n\t\t\t})\n\t\t\t.reduce((sum, el) => {\n\t\t\t\treturn sum + el;\n\t\t\t}, 0);\n\t\t//console.log(sum);\n\t\tthis.setState({ purchasable: sum > 0 });\n\t}\n\n\taddIngredientHandler = (type) => {\n\t\tconst oldCount = this.state.ingredients[type];\n\t\tconst updatedCount = oldCount + 1;\n\t\tconst updatedIngredients = {\n\t\t\t...this.state.ingredients,\n\t\t};\n\t\tupdatedIngredients[type] = updatedCount;\n\t\tconst priceAddition = INGREDIENT_PRICES[type];\n\t\tconst oldPrice = this.state.totalPrice;\n\t\tconst newPrice = oldPrice + priceAddition;\n\t\tthis.setState({ totalPrice: newPrice, ingredients: updatedIngredients });\n\t\tthis.updatePurchaseState(updatedIngredients);\n\t};\n\n\tremoveIngredientHandler = (type) => {\n\t\tconst oldCount = this.state.ingredients[type];\n\t\tif (oldCount <= 0) {\n\t\t\treturn;\n\t\t}\n\t\tconst updatedCount = oldCount - 1;\n\t\tconst updatedIngredients = {\n\t\t\t...this.state.ingredients,\n\t\t};\n\t\tupdatedIngredients[type] = updatedCount;\n\t\tconst priceDeduction = INGREDIENT_PRICES[type];\n\t\tconst oldPrice = this.state.totalPrice;\n\t\tconst newPrice = oldPrice - priceDeduction;\n\t\tthis.setState({ totalPrice: newPrice, ingredients: updatedIngredients });\n\t\tthis.updatePurchaseState(updatedIngredients);\n\t};\n\n\tpurchaseHandler = () => {\n\t\tthis.setState({ purchasing: true });\n\t};\n\n\tpurchaseCancelHandler = () => {\n\t\tthis.setState({ purchasing: false });\n\t};\n\n\tpurchaseContinueHandler = () => {\n\t\t//alert(\"You continue!\");\n\n\t\tconst queryParams = [];\n\t\tfor (let i in this.state.ingredients) {\n\t\t\tqueryParams.push(\n\t\t\t\tencodeURIComponent(i) +\n\t\t\t\t\t\"=\" +\n\t\t\t\t\tencodeURIComponent(this.state.ingredients[i])\n\t\t\t);\n\t\t}\n\t\tqueryParams.push(\"price=\" + this.state.totalPrice);\n\t\tconst queryString = queryParams.join(\"&\");\n\t\tthis.props.history.push({\n\t\t\tpathname: \"/checkout\",\n\t\t\tsearch: \"?\" + queryString,\n\t\t});\n\t};\n\n\trender() {\n\t\tconst disabledInfo = {\n\t\t\t...this.state.ingredients,\n\t\t};\n\t\tfor (let key in disabledInfo) {\n\t\t\tdisabledInfo[key] = disabledInfo[key] <= 0;\n\t\t}\n\t\t// {salad: true, meat: false, ...}\n\t\tlet orderSummary = null;\n\n\t\tif (this.state.loading) {\n\t\t\torderSummary = <Spinner />;\n\t\t}\n\t\tlet burger = this.state.error ? (\n\t\t\t<p>Ingredients can't be loaded</p>\n\t\t) : (\n\t\t\t<Spinner />\n\t\t);\n\t\tif (this.state.ingredients) {\n\t\t\tburger = (\n\t\t\t\t<Aux>\n\t\t\t\t\t<Burger ingredients={this.state.ingredients} />\n\t\t\t\t\t<BuildControls\n\t\t\t\t\t\tingredientAdded={this.addIngredientHandler}\n\t\t\t\t\t\tingredientRemoved={this.removeIngredientHandler}\n\t\t\t\t\t\tdisabled={disabledInfo}\n\t\t\t\t\t\tpurchasable={this.state.purchasable}\n\t\t\t\t\t\tordered={this.purchaseHandler}\n\t\t\t\t\t\tprice={this.state.totalPrice}\n\t\t\t\t\t/>\n\t\t\t\t</Aux>\n\t\t\t);\n\t\t\torderSummary = (\n\t\t\t\t<OrderSummary\n\t\t\t\t\tingredients={this.state.ingredients}\n\t\t\t\t\tprice={this.state.totalPrice}\n\t\t\t\t\tpurchaseCancelled={this.purchaseCancelHandler}\n\t\t\t\t\tpurchaseContinued={this.purchaseContinueHandler}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\n\t\treturn (\n\t\t\t<Aux>\n\t\t\t\t<Modal\n\t\t\t\t\tshow={this.state.purchasing}\n\t\t\t\t\tmodalClosed={this.purchaseCancelHandler}\n\t\t\t\t>\n\t\t\t\t\t{orderSummary}\n\t\t\t\t</Modal>\n\t\t\t\t{burger}\n\t\t\t</Aux>\n\t\t);\n\t}\n}\n\nexport default withErrorHandler(BurgerBuilder, axios);\n"]},"metadata":{},"sourceType":"module"}