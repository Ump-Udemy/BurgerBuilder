{"ast":null,"code":"import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../../shared/utillity\";\nconst initialState = {\n  ingredients: null,\n  totalPrice: 4,\n  error: false,\n  building: false\n};\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nconst addIngredient = (state, action) => {\n  const updatedIngredient = {\n    [action.ingredientName]: state.ingredients[action.ingredientName] + 1\n  };\n  const updatedIngredients = updateObject(state.ingredients, updatedIngredient);\n  const updatedState = {\n    ingredients: updatedIngredients,\n    totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\n    building: true\n  };\n  return updateObject(state, updatedState);\n};\n\nconst removeIngredient = (state, action) => {\n  const updatedIng = {\n    [action.ingredientName]: state.ingredients[action.ingredientName] - 1\n  };\n  const updatedIngs = updateObject(state.ingredients, updatedIng);\n  const updatedSt = {\n    ingredients: updatedIngs,\n    totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\n    building: true\n  };\n  return updateObject(state, updatedSt);\n};\n\nconst setIngredients = (state, action) => {\n  return updateObject(state, {\n    ingredients: {\n      salad: action.ingredients.salad,\n      bacon: action.ingredients.bacon,\n      cheese: action.ingredients.cheese,\n      meat: action.ingredients.meat\n    },\n    totalPrice: 4,\n    error: false,\n    building: false\n  });\n};\n\nconst fetchIngredientsFailed = (state, action) => {\n  return updateObject(state, {\n    error: true\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_INGREDIENT:\n      return addIngredient(state, action);\n\n    case actionTypes.REMOVE_INGREDIENT:\n      return removeIngredient(state, action);\n\n    case actionTypes.SET_INGREDIENTS:\n      return setIngredients(state, action);\n\n    case actionTypes.FETCH_INGREDIENTS_FAILED:\n      return fetchIngredientsFailed(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/ump/Desktop/Udemy/React The Complete Guide(incl Hooks,React Rounter,Redux)/burgerbuilder/src/store/reducers/burgerBuilder.js"],"names":["actionTypes","updateObject","initialState","ingredients","totalPrice","error","building","INGREDIENT_PRICES","salad","cheese","meat","bacon","addIngredient","state","action","updatedIngredient","ingredientName","updatedIngredients","updatedState","removeIngredient","updatedIng","updatedIngs","updatedSt","setIngredients","fetchIngredientsFailed","reducer","type","ADD_INGREDIENT","REMOVE_INGREDIENT","SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED"],"mappings":"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","sourcesContent":["import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../../shared/utillity\";\n\nconst initialState = {\n\tingredients: null,\n\ttotalPrice: 4,\n\terror: false,\n\tbuilding: false,\n};\n\nconst INGREDIENT_PRICES = {\n\tsalad: 0.5,\n\tcheese: 0.4,\n\tmeat: 1.3,\n\tbacon: 0.7,\n};\n\nconst addIngredient = (state, action) => {\n\tconst updatedIngredient = {\n\t\t[action.ingredientName]: state.ingredients[action.ingredientName] + 1,\n\t};\n\tconst updatedIngredients = updateObject(state.ingredients, updatedIngredient);\n\tconst updatedState = {\n\t\tingredients: updatedIngredients,\n\t\ttotalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\n\t\tbuilding: true,\n\t};\n\treturn updateObject(state, updatedState);\n};\n\nconst removeIngredient = (state, action) => {\n\tconst updatedIng = {\n\t\t[action.ingredientName]: state.ingredients[action.ingredientName] - 1,\n\t};\n\tconst updatedIngs = updateObject(state.ingredients, updatedIng);\n\tconst updatedSt = {\n\t\tingredients: updatedIngs,\n\t\ttotalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\n\t\tbuilding: true,\n\t};\n\treturn updateObject(state, updatedSt);\n};\n\nconst setIngredients = (state, action) => {\n\treturn updateObject(state, {\n\t\tingredients: {\n\t\t\tsalad: action.ingredients.salad,\n\t\t\tbacon: action.ingredients.bacon,\n\t\t\tcheese: action.ingredients.cheese,\n\t\t\tmeat: action.ingredients.meat,\n\t\t},\n\t\ttotalPrice: 4,\n\t\terror: false,\n\t\tbuilding: false,\n\t});\n};\n\nconst fetchIngredientsFailed = (state, action) => {\n\treturn updateObject(state, { error: true });\n};\n\nconst reducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase actionTypes.ADD_INGREDIENT:\n\t\t\treturn addIngredient(state, action);\n\t\tcase actionTypes.REMOVE_INGREDIENT:\n\t\t\treturn removeIngredient(state, action);\n\t\tcase actionTypes.SET_INGREDIENTS:\n\t\t\treturn setIngredients(state, action);\n\t\tcase actionTypes.FETCH_INGREDIENTS_FAILED:\n\t\t\treturn fetchIngredientsFailed(state, action);\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}